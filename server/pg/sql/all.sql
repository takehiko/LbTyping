CREATE TABLE question (
    question_id  SERIAL NOT NULL,
    name         text     UNIQUE,
    Type_content text     NOT NULL,
    count        int      DEFAULT 0,
    difficulty   VARCHAR(10)     DEFAULT 'NONE',
    basename     text     DEFAULT '',
    commentary   text     DEFAULT '',
    url          text     DEFAULT '',

    PRIMARY KEY (question_id)
);

CREATE TABLE response (
   response_id  SERIAL NOT NULL,
   student_id   int  NOT NULL,
   question_id  int  NOT NULL,
   start_at     TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
   finish_at    TIMESTAMP WITH TIME ZONE,
   miss_count   int  DEFAULT 0,
   note         TEXT DEFAULT '',

   PRIMARY KEY (response_id),
   FOREIGN KEY (question_id)
   REFERENCES  question (question_id)

);

CREATE TABLE model (
    response_id int NOT NULL,

    PRIMARY KEY (response_id),
    FOREIGN KEY (response_id)
    REFERENCES  response (response_id)
);

INSERT INTO question(question_id,name,Type_content,count,basename,commentary,url) VALUES
(500,'No.1 Hello','#include <stdio.h>\nint main(void){\n    printf("Hello\\n");\n}',50,'hello','タイピングの動作確認用のプログラムです。<br>3行目の途中、「H」を大文字できちんとタイプできましたか？','https://paiza.io/projects/e/ky0Xb0eS5Z6_FuPNMDIHzg');
INSERT INTO question(question_id,name,Type_content,count,basename,commentary,url) VALUES
(501,'No.2 Pangram','#include <stdio.h>\nint main(void){\n    printf("waltz, bad nymph, for quick jigs vex.\\n");\n    return 0;\n}',84,'pangram','このプログラムはprintf(プリントエフ)関数を使って、決まった文字列を出力します。<br><br>1行目の#include&lt;stdio.h&gt;により、printf関数を使用することができます。<br><br>2行目で、mainという、Cのプログラムで最初に実行する関数を宣言しています。<br>mainの前の「int 」と、後ろの「(void)」も、必要です。<br>行の最後の { について、対応する } は5行目の先頭です。{ と } の間に、プログラムが実行する処理を順番に並べます。<br><br>3行目には、実行する処理を記述しており、printf関数で表示する文字を記述します。<br>また、このプログラムで出力する（打ち込んだ）文字列は，すべての英字が1回以上出現しています。<br><br>ところで、3行目と出力を見比べると、3行目の（2つの）「&quot;」と「\n」が出力に現れていません。<br>2つの「&quot;」は、それらで囲まれた中の部分を、文字列とします。<br>次に、「\n」は改行を意味します。このプログラムでは\nがなくても、結果の見た目は変わりませんが、<br>出力時に改行しておくのがよく、もっと複雑なプログラムになると、\nの有無により、結果の表示に影響する<br>こともあります。<br><br>4行目のreturn 0;で、main関数（そしてこのプログラム）の実行は終了となります。','https://paiza.io/projects/e/RFD-sLBc9LpVjAcHnXDW-w');
INSERT INTO question(question_id,name,Type_content,count,basename,commentary,url) VALUES
(502,'No.3 Even-Odd','#include <stdio.h>\nint main(void) {\n    int x = 101;\n\n    if(x % 2 == 1) {\n        printf("Odd number\\n");\n    } else {\n        printf("Even number\\n");\n    }\n    return 0;\n}',112,'evenodd','このプログラムはif(イフ)文を用いて、変数xの値が奇数か偶数かを判定し、その結果を出力します。<br><br>3行目では変数xをint型で宣言し、整数101で初期化しています。<br><br>5行目からのif文で、条件分岐をしています。<br>「if(x % 2 == 1)」は、「xの値を2で割ったときの余りが1と等しいならば」という意味になります。<br>余りが1の場合、printf関数で「Odd number」と出力します。<br>また、else以降はif文の条件を満たさなかったとき、ここではxの値を2で割ったときの余りが1と等しくない（0である）場合に、<br>printf関数で「Even number」と出力します。<br><br>xの値は、このプログラムでは101です。<br>出力には「Odd number」と表示されています。この時、else文の処理は行われていません。','https://paiza.io/projects/e/UbGpyKo64si31wOwlifsZQ');
INSERT INTO question(question_id,name,Type_content,count,basename,commentary,url) VALUES
(503,'No.4 Ten Times','#include <stdio.h>\nint main(void) {\n    int i, u;\n    for (i = 0; i < 10; i++) {\n        printf("waka\\n");\n    }\n\n    u = 0;\n    while (u < 10) {\n        printf("yama\\n");\n        u++;\n    }\n    return 0;\n}',121,'tentimes','このプログラムはfor(フォー)文とwhile(ホワイル)文を使用して、決まった文字列（wakaとyama）を10回ずつ出力します。<br><br>3行目では、整数値をとる変数iとuを宣言しています。<br><br>4行目から6行目までは、forループです。<br>for文の書式は「for (初期化; 条件; 更新) { 処理 }」です。<br>4行目について、初期化により変数iに0を代入します。そして「i++」により、iの値は1増えます（++をインクリメント演算子と<br>いいます）。<br><br>9行目から12行目まではwhileループです。<br>while文の書式は「while (条件式) { 処理 }」です。<br>8行目で変数uに0を代入しておき、11行目の「u++;」を実行するたびに、uの値が1増えます。<br>whileループでuの値が0から9までの間、「yama」と改行を出力する処理を行います。「u++」でuの値が10になったとき、<br>「u < 10」の条件判定は偽となり、whileループから抜け出します。','https://paiza.io/projects/e/Tav2aJBtaOMfUI6eCbDUwQ');
INSERT INTO question(question_id,name,Type_content,count,basename,commentary,url) VALUES
(504,'No.5 Maximum','#include <stdio.h>\nint main(void) {\n    int i;\n    int t[5] = {60, 55, 78, 90, 59};\n    int max;\n\n    for (i = 0; i < 5; i++) {\n        printf("t[%d] = %d\\n", i, t[i]);\n    }\n    max = t[0];\n    for (i = 1; i < 5; i++) {\n        if(t[i] > max) max = t[i];\n    }\n    printf("max = %d\\n", max);\n    return 0;\n}',194,'maximum','このプログラムは、配列に格納された各要素と、要素の中の最大値を出力します。<br><br>3-5行目では、forループに使用する変数i、要素数が5つの整数の配列t、最大値を格納するための<br>変数maxを宣言しています。配列tは、{ }を使用して初期化しています。「}」のあとに、<br>宣言の終わりを示す「;」が必要です。<br><br>7-9行目では、for文を用いて配列tの各要素を出力します。<br><br>10行目では、変数maxにt[0]の値（このプログラムでは60）を代入しています。<br>11行目のfor文では、i=1, 2, 3, 4に対して繰返しの処理を行います。<br>12行目は、t[i]の値が、変数maxの値よりも大きければ、それをmaxの値とします。条件を満たす<br>ときの処理（ここではmax = t[i];）が1つの文なら、前後に「{」と「}」を書かなくても、<br>同じ動作になります。<br>このプログラムでは、i=2のときに変数maxの値は78になり、i=3のときに90になります。<br>それ以外（i=1, 4）のときは、if文の条件式のt[i] &gt; maxは偽と判定されるため、<br>maxへの代入は行われません。<br><br>14行目ではprintf関数を使用して、「max = 」のあとに、変数maxの値（最大値）を出力します。','https://paiza.io/projects/e/2h9ix1XJbZWRZ__mBaPG9w');
INSERT INTO question(question_id,name,Type_content,count,basename,commentary,url) VALUES
(505,'No.6 Triangle Area','#include <stdio.h>\nint main(void) {\n    double bottom = 9.5;\n    double height = 5;\n    double area;\n\n    area = bottom * height / 2;\n    printf("area = %f\\n", area);\n    return 0;\n}',129,'trianglearea','このプログラムは底辺と高さの数値を用いて、三角形の面積を求めます。<br><br>3～5行目では、double型の変数bottom、height、areaを宣言します。<br>またbottomとheightには初期値を指定しており、それぞれ、三角形の<br>底辺と高さとなります。<br><br>7行目では面積の計算を行っています。<br>「底辺×高さ÷2」という、三角形の面積の公式に基づき、結果を<br>変数areaに代入します。<br><br>8行目にprintf関数を呼び出して、面積を出力します。<br>double型の値なので、%dではなく%fを指定します。<br>また%fの指定により、小数点以下はちょうど6桁分を出力します。<br>ですのでこのプログラムの出力は、「area = 23.750000」となります。','https://paiza.io/projects/e/zyZQMcxuB0h3EUFlV6Aveg');
INSERT INTO question(question_id,name,Type_content,count,basename,commentary,url) VALUES
(506,'No.7 Exponent','#include <stdio.h>\ndouble exponent(double x, int n){\n    int i;\n    double t = 1.0;\n    for(i = 1; i <= n; i++){\n        t = t * x;\n    }\n    printf("%.2f\\n", t);\n    return t;\n}\nint main(void){\n    double a = 3.5;\n    int b = 5;\n    printf("%.2f to the %dth power is ", a, b);\n    exponent(a, b);\n    return 0;\n}',207,'exponent','このプログラムは「3.5の5乗」を計算して出力します。<br>べき乗の計算には、自作関数を使用します。<br><br>2-10行目は自作関数のexponentの定義です。2行目を見ると、<br>double型のxとint型のnを引数にとり、double型の値を返すのが<br>わかります。<br>変数tを1.0に初期化してから、5-7行目で、for文を用いてn回、<br>xを掛けてtの値を更新します。<br>forループを終えたときのtの値が、xのn乗となります。8行目で<br>それを出力し、9行目のreturn文で値を返します。<br><br>11-17行目はmain関数です（これも自作関数です）。<br>double型の変数aは3.5、int型の変数bは5として、それぞれ初期化<br>します。<br>14行目のprintf関数では、「3.50 to the 5th power is 」の<br>ところを出力します。aの値の出力は、「%.2f」と指定することで、<br>小数第2位までにしています。<br>15行目でexponent関数の呼び出しを行い、この中で「525.22」を<br>出力します。8行目には「%.2f」とあり、ここでも小数第2位<br>までです（四捨五入せずに、3.5の5乗を計算すると525.21875に<br>なります）。<br><br>このプログラムの出力は、「3.50 to the 5th power is 525.22」<br>となります。','https://paiza.io/projects/e/jlDXtiJIwhJnKMYvsZPOdA');

-- リプレイ機能の動作確認用データ
INSERT INTO response(student_id,question_id,start_at,finish_at,miss_count,note) VALUES
(1, 500, '2021-10-29T00:01:55.085Z', '2021-10-29T00:02:11.950Z', 10, '23,0.168;69,0.208;6E,0.14;63,0.262;6C,0.052;75,0.23;64,0.112;65,0.22;3C,0.304;73,0.208;74,0.253;64,0.208;69,0.028;6F,0.128;2E,0.257;68,0.263;3E,0.272;69,0.33;6E,0.155;74,0.049;61x,0.192;6Dx,0.021;69x,0.18;6Ex,0.096;42S,0.413;42S,0.215;42S,0.204;42S,0.147;6D,0.267;61,0.045;69,0.131;6E,0.096;28,0.271;76,0.363;6F,0.088;69,0.12;64,0.098;29,0.342;7B,0.41;70,0.403;69x,0.115;72x,0.028;6Ex,0.125;74x,0.115;42S,0.44;42S,0.131;42S,0.092;42S,0.103;72,0.246;69,0.101;6E,0.134;74,0.016;66,0.219;28,0.268;22,0.304;48,0.235;65,0.87;6C,0.211;6Fx,0.275;42S,0.474;6C,0.23;6F,0.184;5Dx,0.622;42S,0.546;5C,0.431;6E,0.777;22,0.551;29,0.268;3B,0.447;7D,0.35');
INSERT INTO response(student_id,question_id,start_at,finish_at,miss_count,note) VALUES
(1, 500, '2021-10-29T00:01:55.085Z', '2021-10-29T00:02:11.950Z', 10, '23,0.168;69,0.208;6E,0.14;63,0.262;6C,0.052;75,0.23;64,0.112;65,0.22;3C,0.304;73,0.208;74,0.253;64,0.208;69,0.028;6F,0.128;2E,0.257;68,0.263;3E,0.272;69,0.33;6E,0.155;74,0.049;61x,0.192;6Dx,0.021;69x,0.18;6Ex,0.096;42S,0.413;42S,0.215;42S,0.204;42S,0.147;6D,0.267;61,0.045;69,0.131;6E,0.096;28,0.271;76,0.363;6F,0.088;69,0.12;64,0.098;29,0.342;7B,0.41;70,0.403;69x,0.115;72x,0.028;6Ex,0.125;74x,0.115;42S,0.44;42S,0.131;42S,0.092;42S,0.103;72,0.246;69,0.101;6E,0.134;74,0.016;66,0.219;28,0.268;22,0.304;48,0.235;65,0.87;6C,0.211;6Fx,0.275;42S,0.474;6C,0.23;6F,0.184;5Dx,0.622;42S,0.546;5C,0.431;6E,0.777;22,0.551;29,0.268;3B,0.447;7D,0.35');
INSERT INTO response(student_id,question_id,start_at,finish_at,miss_count,note) VALUES
(1, 500, '2021-10-29T08:12:43.254Z', '2021-10-29T08:12:55.749Z', 1, '23,0.196;69,0.26;6E,0.131;63,0.372;6C,0.176;75,0.185;64,0.123;65,0.214;3C,0.343;73,0.25;74,0.224;64,0.279;69,0.062;6F,0.075;2E,0.277;68,0.273;3E,0.309;69,0.295;6E,0.128;74,0.028;6D,0.203;61,0.043;69,0.18;6E,0.074;28,0.333;76,0.269;6F,0.091;69,0.124;64,0.064;29,0.41;7B,0.297;70,0.626;72,0.113;69,0.051;6E,0.153;74,0.047;66,0.233;28,0.218;3Ax,0.253;42S,0.698;22,0.357;48,0.254;65,0.139;6C,0.196;6C,0.106;6F,0.237;5C,0.43;6E,0.172;22,0.263;29,0.256;3B,0.416;7D,0.979');
INSERT INTO response(student_id,question_id,start_at,finish_at,miss_count,note) VALUES
(1, 506, '2021-10-30T02:20:18.150Z', '2021-10-30T02:21:23.252Z', 10, '23,0.549;69,0.183;6E,0.109;63,0.351;6C,0.176;75,0.168;64,0.098;65,0.212;3C,0.323;73,0.184;74,0.227;64,0.219;69,0.064;6F,0.083;2E,0.223;68,0.229;3E,0.24;64,0.705;6F,0.056;75,0.091;62,0.073;6C,0.111;65,0.153;65,0.533;78,0.249;70,0.275;6F,0.051;6E,0.714;65,0.062;74x,0.245;42S,0.415;6E,0.192;74,0.096;28,0.304;64,0.517;6F,0.064;75,0.064;62,0.151;6C,0.09;65,0.181;78,0.278;2C,0.343;69,0.287;6E,0.12;74,0.079;6E,0.291;29,0.505;7B,0.423;69,0.694;6E,0.136;74,0.058;69,0.19;3B,0.77;64,0.256;6F,0.076;75,0.106;62,0.061;6C,0.124;65,0.155;74,0.341;2Dx,0.543;42S,0.61;2Dx,0.325;31x,0.177;42S,0.594;42S,0.106;3D,0.427;31,0.281;2E,0.182;30,0.327;3B,0.394;66,0.422;6F,0.081;72,0.126;28,0.482;69,0.391;3D,0.465;31,0.346;3B,0.133;69,0.36;3C,0.351;3D,0.392;4Ex,0.613;42S,0.508;6E,0.176;3B,0.22;69,0.555;2B,0.332;2B,0.095;29,0.364;7B,0.489;74,1.129;3D,0.351;74,0.308;2A,0.39;78,0.309;3B,0.153;7D,0.558;70,0.568;72,0.126;69,0.065;6E,0.115;74,0.075;66,0.216;28,0.213;22,0.533;25,0.417;2E,0.525;32,0.21;66,0.26;5C,0.611;6E,0.196;22,0.44;2C,0.531;74,0.221;29,0.348;3B,0.329;72,0.46;65,0.059;74,0.191;75,0.125;72,0.052;6E,0.154;35x,0.358;3Bx,0.141;42S,0.581;42S,0.102;42S,0.24;35x,0.453;3Bx,0.227;42S,0.493;42S,0.101;74,0.341;3B,0.195;7D,0.988;69,0.416;6E,0.103;74,0.026;6D,0.165;61,0.04;69,0.118;6E,0.075;28,0.219;76,0.203;6F,0.088;69,0.112;64,0.093;29,0.367;7B,0.3;64,0.62;6F,0.076;75,0.088;62,0.057;6C,0.12;65,0.135;61,0.251;3D,0.274;33,0.821;2E,0.119;35,0.962;3B,0.284;69,0.747;6E,0.119;74,0.093;62,0.39;3D,0.589;35,0.235;3B,0.169;70,0.712;72,0.159;69,0.05;6E,0.14;74,0.055;66,0.219;28,0.239;22,0.303;25,0.314;2E,0.388;32,0.599;66,0.217;74,0.285;6F,0.073;74,0.551;68,0.109;65,0.144;25,1.075;64,0.407;74,0.287;68,0.1;70,0.421;6F,0.072;77,0.068;65,0.064;72,0.144;69,0.327;73,0.082;22,0.581;2C,0.389;61,0.189;2C,0.231;62,0.388;29,0.556;3B,0.31;65,0.585;78,0.32;70,0.189;6F,0.109;6E,0.174;65,0.072;6E,0.499;74,0.136;28,0.31;61,0.22;2C,0.187;62,0.237;29,0.308;3Ax,0.272;42S,1.036;3B,0.273;72,0.409;65,0.08;74,0.174;75,0.048;72,0.133;6E,0.091;30,0.253;3B,0.222;7D,0.394');
INSERT INTO response(student_id,question_id,start_at,finish_at,miss_count,note) VALUES
(1, 506, '2021-10-30T02:21:35.898Z', '2021-10-30T02:22:47.919Z', 15, '23,0.415;69,0.495;6E,0.513;63,0.875;6C,0.21;75,0.176;64,0.061;65,0.201;3C,0.636;73,0.24;74,0.241;64,0.253;69,0.051;6F,0.105;2E,0.212;68,0.266;3E,0.276;64,0.722;6F,0.035;75,0.109;62,0.102;6C,0.096;65,0.175;78x,0.539;42S,0.621;65,0.062;78,0.259;70,0.279;6F,0.075;6E,0.249;65,0.118;6E,0.096;74,0.175;28,0.315;64,0.283;6F,0.059;75,0.095;62,0.088;6C,0.117;65,0.15;78,0.403;2C,0.33;69,0.349;6E,0.119;74,0.072;6E,0.263;29,0.317;50x,0.313;7Bx,0.005;42S,0.637;42S,0.649;7B,0.556;69,0.858;6E,0.119;74,0.076;69,0.186;3B,0.323;64,0.375;6F,0.069;75,0.096;62,0.051;6C,0.12;65,0.13;74,0.28;3D,0.683;31,0.335;2E,0.112;30,0.272;3B,0.26;66,0.27;6F,0.064;72,0.123;28,0.265;69,0.328;3D,0.421;31,0.251;3B,0.23;69,0.285;3C,0.38;3D,0.315;6E,0.236;3B,0.259;69,0.419;2B,0.391;2B,0.125;29,0.447;7B,0.499;74,0.714;3D,0.231;35x,0.905;42S,0.679;74,0.28;2A,0.517;78,0.395;3B,0.125;7D,0.36;70,0.683;69x,0.164;6Ex,0.144;42S,0.525;42S,0.108;72,0.16;69,0.072;6E,0.117;74,0.031;66,0.194;28,0.222;22,0.304;25,0.179;2E,0.655;32,0.761;66,0.241;5C,0.409;6E,0.145;22,0.257;2C,0.359;35x,0.645;42S,0.656;42S,0.115;35x,0.227;42S,0.741;74,0.335;29,0.375;3B,0.429;72,0.374;65,0.077;74,0.196;75,0.053;72,0.111;6E,0.105;74,1.335;3B,0.274;7D,0.505;69,0.396;6E,0.115;74,0.02;6D,0.178;61,0.005;69,0.171;6E,0.086;28,0.231;76,0.263;6F,0.068;69,0.136;64,0.012;29,1.157;7B,0.441;64,0.483;6F,0.059;75,0.101;62,0.084;6C,0.104;65,0.178;61,0.493;3D,0.262;33,0.281;2E,0.146;35,0.184;3B,0.318;69,0.369;6E,0.115;74,0.027;62,0.47;3D,0.419;35,0.273;3B,0.19;70,0.633;69x,0.294;42S,0.494;72,0.119;69,0.089;6E,0.111;74,0.02;66,0.22;28,0.248;25x,0.392;2Bx,0.584;22x,0.277;42S,0.462;42S,0.106;42S,0.412;22,0.432;25,1.015;2E,0.397;32,0.8;66,1.565;74,0.497;6F,0.065;6Ex,0.249;65x,0.137;42S,0.35;42S,0.109;74,0.288;68,0.078;65,0.176;25,1.101;64,0.38;74,0.351;68,0.084;70,0.479;6F,0.051;77,0.092;65,0.039;72,0.166;69,0.392;73,0.082;22,0.704;2C,0.359;61,0.215;2C,0.231;62,0.442;29,0.355;3B,0.982;65,1.052;78,0.298;70,0.139;6F,0.096;6E,0.173;65,0.08;6E,0.077;74,0.196;28,0.636;61,0.388;2C,0.195;62,0.311;29,0.296;3B,0.261;65x,0.516;42S,0.5;72,0.116;65,0.044;74,0.189;75,0.118;72,0.071;6E,0.14;30,0.273;3B,0.238;7D,0.446');

INSERT INTO model(response_id) VALUES(1);
INSERT INTO model(response_id) VALUES(2);
INSERT INTO model(response_id) VALUES(3);
-- INSERT INTO model(response_id) VALUES(4);
-- INSERT INTO model(response_id) VALUES(5);

