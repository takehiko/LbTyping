INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210139,'(2-a) Hello','printf("Hello, World!\\n");\nreturn 0;',33,'NONE','hello','This program displays "Hello, World!".<br><br>Line 3 prints a fixed string using the printf function. "printf("string");" means the instruction to print "string".<br><br>However, "\n" is not displayed. This denotes a line break. Although there is no difference in the result whether "\n" is present or not in this program, it is a good manner to end each line with a line break.<br><br>Line 4 says "return 0;". It specifies the end of the main function.<br>','https://paiza.io/projects/e/SW85LQcKgOs3P4Cs4R5etQ');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210242,'(2-b) Four arithmetic operations','printf("7 * 3 = %d\\n", 7 * 3);\nprintf("7 / 3 = %d\\n", 7 / 3);',46,'NONE','arith','一行目のprintfの第2引数をみると、7*3とありますが、これは実行時に評価されて「21」となります。そして、第1引数の%dに「21」が代入され、出力結果は「7 * 3 = 21」となります。<br>二行目も同様に考えられますが、整数同士の割り算におけるあまりは切り捨てになるので、第2引数の評価結果は「2」となります。出力結果は「7 / 3 = 2」となります。','https://paiza.io/projects/e/dQ7790yzyt67bR0OOpBRJQ');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210358,'(2-c) Pangram','#include <stdio.h>\nint main(void){\n    printf("waltz, bad nymph, for quick jigs vex.\\n");\n    return 0;\n}',84,'NONE','pangram','helloと同じく、文字列を表示するプログラムです。<br><br>「waltz, bad nymph, for quick jigs vex.」という英文は、見慣れないかもしれませんが、アルファベットのすべての文字を作った短文で、パングラムといいます。<br><br>ところで今回、プログラムコードをすべて、打ち込んでもらいました。最初の「#」や「{」「}」の記号類、そして「&lt;stdio.h&gt;」を、間違えずにタイプできたでしょうか。時間がかかりすぎたと思った人は、やり直してみて、誤タイプ数とタイプ時間を減らすよう努めてください。','https://paiza.io/projects/e/qXvC-1jw3w74sUQYJtGPYQ');
--UPDATE question SET commentary='「Hello, World!」と表示するプログラムです。<br><br>3行目で、文字列を表示しています。このうちprintfは関数です（「printf関数」と呼ばれることもあります）。「printf("文字列");」で、文字列を表示せよという指示になります。<br><br>ただし、「\n」は、表示されません。これは改行を意味します。このプログラムでは、「\n」があってもなくても、結果に違いはありませんが、行の終わりは改行するのを、習慣付けておくといいでしょう。<br><br>4行目の「return 0;」は、自作関数であるmainの終了を指示します。' WHERE question_id=210139;
UPDATE question SET commentary='This program calculates and outputs the sum, difference, product, and quotient of 7 and 3.<br><br>In the program, the message of the summation is written as "7 + 3 = %d<span lang="en" style="font-family: Courier New;">\</span>n", but it is not output as it is. Actually, %d is replaced by 10, which is the calculation result of 7 + 3. In addition, <span lang="en" style="font-family: Courier New;">\</span>n indicates a new line. Therefore, the output is "7 + 3 = 10".<br><br>The symbol "+" is used for addition, "-" for subtraction, "*" (asterisk) for multiplication, and "/" (slash) for division. Many programming languages, not limited to C, employ these characters.<br><br>The output of the final line is "7 / 3 = 2", but not "7 / 3 = 2.333333". This is because when an integer is divided by another integer, the quotient is necessarily an integer too.' WHERE question_id=210242;
UPDATE question SET commentary='Like (2-a), this program outputs a single string.<br><br>The English sentence "waltz, bad nymph, for quick jigs vex." may not look familiar, but it is a short sentence made up of all the letters of the alphabet, called a pangram.<br><br>By the way, this task asked you to type in all the program code. Were you able to type the first character "#", the symbols of "{" and "}", and "&lt;stdio.h&gt;" without making mistakes?<br><br>If you thought it took you too long, please try again to reduce the number of typos and typing time.' WHERE question_id=210358;
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210422,'(3-a) Increment','int a = 7;\nprintf("a = %d\\n", a);\na = a + 1;',32,'EASY','increment','This program is intended to verify that an assignment changes the value of a variable.<br><br>In line 3, the variable a is declared as int (the integer type) and initialized with 7.<br><br>Line 4 uses the printf function to output the value of the variable a.<br>Here, the output is "a = 7".<br><br>Line 5 increases the value of the variable a by 1.<br>The "=" represents an assignment. That is, this statement assigns the result of the calculation on the right-hand side to the variable on the left-hand side.<br>Accordingly, this process makes the value of the variable a 8.<br>In the C Programming Language, there is an operator "++" for the increment (often used in for statements),<br>and the same process can be performed by replacing the code in line 5 with "a++;" or "++a;".<br><br>Line 6 once again outputs the value of the variable a.<br>Here, the output is "a = 8".','https://paiza.io/projects/e/jLDVnWfLz7KOLA8EH3JRbA');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210539,'(3-b) Day-of-week calculation','int year = 1999, month = 12, day = 31;\nint y = year + year / 4 - year / 100 + year / 400;\nint m = (13 * month + 8) / 5;\nint dow = (y + m + day) % 7;',103,'EASY','zeller','This program uses Zeller''s congruence to output a number representing the day of the week, based on the year, month, and day of the week.<br><br>Line 3 declares the variables named year, month, and day of type int and sets the date.<br>Multiple variables are declared in a single statement, which is called a collective declaration.<br><br>Lines 4 through 6 are day-of-week calculations using Zeller''s congruence.<br>We could alternatively substitute the variable dow with the formula in two separate lines,<br>but here we have the prepared variables y and m to contain the results of the calculation in progress, and used them in the calculation of dow.<br>If you have time, compare this with the class program to make sure you are doing the same thing.<br><br>Line 7 calls the printf function to output the value of dow.<br>The output is a single number, with 0 representing Sunday, 1 representing Monday, ..., and 6 represents Saturday.<br>In this program, the output is "5"; December 31, 1999 is a Friday.','https://paiza.io/projects/e/-lAja0FhVu6o68EPlCl2EA');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210653,'(3-c) On the left and right...','int left = 2;\nint right = 0;\nint judge = (right - left + 3) % 3;\nif (judge == 0) {\n  printf("Draw.\\n");\n}\nif (judge == 1) {\n  printf("Right won!\\n");\n}\nif (judge == 2) {\n  printf("Left won!\\n");\n}',150,'EASY','rps','In this program, you play "rock-paper-scissors" with your left and right hands.<br><br>The program declares the variable left on line 3 and the variable right on line 4, and assigns the moves as integer values. Specifically, 0 is for "rock", 1 is for "paper", and 2 is for "scissors". In this program, the left hand means "scissors" and the right hand means "rock".<br><br>The variable judge is set to an integer value based on the values of left and right. The remainder operator % is used to ensure that the result is always 0, 1, or 2. Note that "+ 3" is appended to avoid the inconvenience of a negative number being divided.<br><br>Among lines 6 through 8, 9 through 11, and 12 through 14, exactly one conditional expression is determined to be true depending on the value of judge. Note also that the operator used on lines 6, 9, and 12 is "==" and not "=". If the value of judge is 0 (left and right are equal), the program outputs "Draw." If it is 1, the output is "Right won!" and if it is 2, that is "Left won!"<br><br>The output of this program is "Right won!" When the left hand is scissors and the right hand is "rock", sure enough the right hand wins.','https://paiza.io/projects/e/LJ4Hc9plYgwm9DHGjf3jhA');

--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url,o_question_id) VALUES (310496,'(3-a)(補) 1増やす?','int a = 7;\nprintf("a = %d\\n", a);\na = 8;',30,'EASY','s_set8','【(3-a) 1増やす】と異なるのは、5行目です。このプログラムでは「a = 8;」となっています。<br>変数aの値は、7から8になりますが、この書き方を「1増やす」とは言いません。<br>1増やすときは、a++;やa = a + 1;などを使いましょう。','https://paiza.io/projects/e/pL-dgFwuVOeAHLdJCTfgGg',210422);
--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url,o_question_id) VALUES (310522,'(3-b)(補) 曜日計算','int y = 1999, m = 12, d = 31;\nint a = y + y / 4 - y / 100 + y / 400;\nint b = (13 * m + 8) / 5;\nint c = (a + b + d) % 7;',74,'EASY','s_zeller','【(3-b)曜日計算】と同じように、ツェラーの公式で曜日を求めます。<br>異なる点は、変数の名前が全て1文字であることです。<br>1文字の変数名ばかりだと、プログラムが読みにくくなるので注意しましょう。','https://paiza.io/projects/e/gHT9tUz0yoHZiY8EdXqGTw',210539);
--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url,o_question_id) VALUES (310678,'(3-c)(補) 左と右で...?','int left = 2;\nint right = 0;\nint judge = right - left;\nif (judge == -2) {\n    printf("Right won!\\n");\n}\nif (judge == -1) {\n    printf("Left won!\\n");\n}\nif (judge == 0) {\n  printf("Draw.\\n");\n}',146,'EASY','s_rps','このプログラムでは、左手と右手で「じゃんけん」をします。<br><br>3行目に変数left、4行目に変数rightを宣言して、それぞれの（じゃんけんの）手を整数値で割り当てます。<br>ここでは、0をグー、1をパー、2をチョキとします（英語の"Rock! Paper! Scissors!"と同じ順です）。なので、左手がチョキ、右手がグーという意味になります。<br><br>5行目で宣言する変数judgeには、left - rightにより、勝敗を表す整数値がセットされます。<br><br>judgeの値が-2となるのは、「leftが2でrightが0」のときのみで、右手の勝ちです。<br><br>judgeの値が-1となるのは、「leftが1でrightが0」または「leftが2でrightが1」のときで、左手の勝ちです。<br><br>judgeの値が0となるのは、leftとrightの値が等しいとき、具体的には「leftが0でrightが0」「leftが1でrightが1」「leftが2でrightが2」のいずれかで、これは引き分けです。<br><br>judgeの値が1となるのは、「leftが0でrightが1」または「leftが1でrightが2」のときで、右手の勝ちです。<br><br>judgeの値が2となるのは、「leftが0でrightが2」のときのみで、左手の勝ちです。プログラムではこの条件判定により、「Left won!」を出力することになります。','https://paiza.io/projects/e/QmfG87bLGgH1KTIltSm1ug',210653);
--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url,o_question_id) VALUES (310181,'(2-a)(補) Hello','printf("Hello\\nWorld!\\n");\nreturn 0;',34,'EASY','s_hello','【(2-a) Hello】と同じく、printf関数を用いて文字列を出力するプログラムです。<br>改行を意味する「\n」が、文字列の途中にも入っています。<br>出力は2行になり、1行目は「Hello」、2行目は「World!」です。','https://paiza.io/projects/e/EutycniNXx4Lcecc9ZZTVQ',210139);
--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url,o_question_id) VALUES (310210,'(2-b)(補) 四則演算','printf("73 * 37 = %d\\n", 73 * 37);\nprintf("73 / 37 = %d\\n", 73 / 37);',54,'EASY','s_arith','73と37の和差積商を求めています。2桁でも問題なく計算できていることが分かります。<br><br>5行目の73 * 37 を9999999 * 9999999 に変えて、実行してみましょう。<br>そうすると、「9999999 * 9999999 = 256447233」と出力され、正しい答え（99999980000001）になってくれません。<br>この現象をオーバーフローといいます。','https://paiza.io/projects/e/Fz0meakIV3HfRqxMTdb8Mg',210242);
--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url,o_question_id) VALUES (310326,'(2-c)(補) パングラム','#include <stdio.h>\nint main(void) {\n    printf("Cozy lummox gives smart squid who asks for job pen.\\n");\n    return 0;\n}',95,'FULL','s_pangram','【(2-c) パングラム】と同じく、パングラムを出力するプログラムです。<br>パングラムにはタイピングしてもらった文以外にもいろいろあります。<br>気になった人は、「パングラム」で検索してみましょう。','https://paiza.io/projects/e/WXZspLliXZL4M_9EqWxWQQ',210358);
--UPDATE question SET type_content='#include <stdio.h>\nint main(void){\n    printf("bright vixens jump; dozy fowl quack.\\n");\n    return 0;\n}',"count"=84,url='https://paiza.io/projects/e/avQDfmbiQeYTfJU_Vb3_UQ' WHERE question_id=310326;
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210751,'(4-a) How to go?','if ((hour2 * 60 + min2) - (hour1 * 60 + min1) <= 10) {\n    printf("Take a bike.\\n");\n} else {\n    printf("Let''s walk.\\n");\n}',93,'EASY','howtogo','Using the "if" statement for conditional branching, "If I need to get there in 10 minutes, I''ll ride my bike. If not, we''ll walk." is described in the program.<br><br>The variables hour1 and min1 represent the hour and minute of the current time, while hour2 and min2 represent the hour and minute of the arrival time. The if statement used in line 5 branches if or not the difference between the arrival time and the current time is equal to or less than 10 minutes. In this program, the difference is 8 minutes, so line 6 is processed and the output is "Take a bike."<br><br>Change the value of the variable min2 to 6 and run it, and you will find the output "Let''s walk.", since the difference is over 10 minutes.<br><br>Line 5 contains three sets of parentheses. The outermost pair is required for the syntax of the if statement. The inner two sets represent the cohesion in the expression.','https://paiza.io/projects/e/c1oX4xQQDudK7RgfXWJobQ');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210898,'(4-b) Decremental','while (num > 0) {\n    num = num - rand() % 5 - 1;\n    printf("num = %d\\n", num);\n}',56,'EASY','drawdown','The program repeatedly subtracts a random number between 1 and 5 from the variable num until the value of num is 0 or negative. The "while" statement is used for repetition.<br><br>In line 4, the variable num is declared as the integer type and initialized with 20.<br><br>Line 6 is the while statement. "While (num &gt; 0)" means that it repeats the process while num is greater than 0, but it can also be interpreted as it finishes the repeat process when num is equal to or less than 0. The processing for one iteration is from "{" at the end of line 6 to "}" in line 9; actually lines 7 and 8 are in charge.<br><br>Line 7 subtracts a random number between 1 and 5 from the variable num. Here, the "rand" function, which is a standard library function, is used to generate a random number. Since "%" is the remainder operator, "rand() % 5" results in between 0 and 4. To reduce the value of num by a random value between 1 and 5, "- 1" is appended. Note that to use the "rand" function, you must include the header file "stdlib.h", which is specified in line 2 of this program.<br><br>This program outputs the value of num in line 5 after the initialization and in line 8 in the iterative process of the while statement. The initial line of the output is "num = 20", and the value is decreased. You might be wondering if the value returned by the rand function is fixed in this program. The last line shows "num = 0".<br><br>To see the output all the way through in paiza.io, move the mouse cursor just below the "Run" button. As you do so, the shape of the mouse cursor change, and when you drag, the output and input areas expand and contract up and down. Try it.','https://paiza.io/projects/e/JNfVQyPcGjHdLiOewxKwlw');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210957,'(4-c) Coordinates','for (i = 1; i <= 15; i++) {\n    printf("%d: (%d, %d)\\n", i, x, y);\n    if (x == n) {\n        n++;\n        x = 1;\n        y = n;\n    } else {\n        x++;\n        y--;\n    }\n}',85,'EASY','grid','The program outputs coordinates starting from the point (1, 1) in 2D coordinates such that both the x and y coordinates are positive integers.<br><br>Let''s take a closer look at the for statement in line 6. First, "i = 1" sets the value of variable i to 1. Next, with "i &lt;= 15", the program iterates until the value of i is less than or equal to 15. Therefore this program changes the value of the integer variable i from 1 to 15, and processes lines 7-15 for each. When the value of i increases by 1 and reaches 16, "i &lt;= 15" is judged false and the iteration is terminated.<br><br>Line 7 calls the printf function to print the values of variables i, x, and y.<br><br>Lines 8-15 describe conditional branches using if-else. If the value of x is equal to the value of n, increase n by 1 and assign 1 to x and n to y. Otherwise, increase x by 1 and decrease y by 1. The double minus sign denoted by "--" is the opposite of "++", meaning decrease by 1. If we focus on the changes in the variables other than i, then keeping the equality x+y=n, n increases by 1 and x increases by 1 from 1 to n and y decreases by 1 from n to 1.<br><br>The program outputs 15 lines from "1: (1, 1)" to "15: (5, 1)".','https://paiza.io/projects/e/QIHKT_4YAuW8HO5gYR4jLw');
--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url,o_question_id) VALUES (310718,'(4-a)(補) 偶奇判定','if (num % 2 == 0) {\n    printf("%d is even", num);\n} else {\n    printf("%d is odd", num);\n}',65,'EASY','s_oddeven','整数型の変数の値が偶数か奇数かを判定するプログラムです。<br><br>対象となる変数はnumです。<br>5行目のif文では、numを2で割ったときの余りが0かどうかで分岐します。<br>余りが0なら、「（numの値） is even」を、1なら「（numの値） is odd」を<br>出力します。このプログラムでは、5で割った余りは1なので、elseのあとの<br>命令を実行し、出力は「5 is odd」となります。','https://paiza.io/projects/e/jbb--WFX2nXtiiA5xtMblw',210751);
--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url,o_question_id) VALUES (310872,'(4-b)(補) 減っていく','while (num > 1) {\n    num = sqrt(num);\n    printf("num = %d\\n", num);\n}',51,'EASY','s_drawdown','このプログラムでは、変数numの値が1になるまで、平方根を求め、代入を<br>繰り返します。<br><br>6行目からが、while文による繰り返しです。<br>「while (num > 1)」は、「numの値が1より大きい間、処理を繰り返す」という<br>意味ですが、「numの値が1以下になったら、繰り返しの処理を終える」と解釈する<br>こともできます。<br><br>7行目では、numの平方根を求めて、numに代入します。<br>平方根（のうち正の値）を求める際、標準関数の一つであるsqrt関数を呼び出して<br>います。その際、math.hというヘッダファイルを読み込む必要があり、<br>このプログラムでは2行目に指定しています。<br>また、20の平方根は4.4721359…となりますが、変数numは整数の値しか<br>とることができないため、整数部分の4が代入されます。<br><br>numの値は4行目で初期化された20から始まって4、2、1へと変化し、<br>その都度、8行目のprintf関数により値が出力されます。','https://paiza.io/projects/e/E1LAEHFQ9r4wIsncKHGSWw',210898);
--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url,o_question_id) VALUES (310971,'(4-c)(補) 座標','for (i = 1; i <= 15; i++) {\n    printf("%d: (%d, %d)\\n", i, x, y);\n    if (y == n) {\n        n++;\n        y = 0;\n        x = n;\n    } else {\n        y++;\n        x--;\n    }\n}',85,'EASY','s_grid','このプログラムは、2次元座標上の点(0,0)から始まって、x座標もy座標も0以上の整数と<br>なるような座標を出力します。<br><br>5行目のfor文について、【(4-c) 座標】と同じく、変数iは1から15まで変化します。<br>6行目で、iの値と座標の出力を行います。<br><br>7～14行目は、if～elseを用いた条件分岐です。<br>elseのあとの処理から見ていきます。yの値がnの値と等しくないとき、<br>xを1減らし、yを1増やします。2次元平面を左上に移動します。<br><br>x+y=nという等式（これは代入ではありません）を維持したまま、<br>xがnから1ずつ減って0まで、yは0から1ずつ増えてnまで、それぞれ変化します。<br>そしてyとnの値が等しくなったときに、nの値を1増やし、座標を(n,0)に変更します。<br><br>出力は「1: (0,0)」から「15: (0,4)」までの15行となります。2次元平面上で、<br>この15個の座標をたどってみると、面白いですよ。','https://paiza.io/projects/e/Ubex6xDzgf1Pqh8yjVbgmg',210957);
--UPDATE question SET type_content='if (num % 2 == 0) {\n    printf("%d is even\\n", num);\n} else {\n    printf("%d is odd\\n", num);\n}',"count"=69 WHERE question_id=310718;
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (211073,'(5-a) Eratosthenes'' sieve','for (i = 2; i < 100; i++) {\n    if (a[i] == 0) {\n        printf("%d ", i);\n        for (j = i * 2; j < 100; j = j + i) {\n            a[j] = 1;\n        }\n    }\n}',79,'EASY','sieve','This program outputs the prime numbers less than 100 in ascending order, on a single line with a space character between numbers. The first number output is 2 and the last is 97.<br><br>The array declared in line 3 is used to record whether numbers are prime or composite, so that i is prime if a[i] equals to 0 and composite if a[i] equals to 1, where i is between 2 and 99. The declaration says a[100], but you cannot refer to or assign a[100] in the expression. Moreover, the values a[0] and a[1] are not referred in this program.<br><br>The variables declared in line 4 is used in for statements. Such a variables is called a "loop variable" or a "loop counter". Since we would like to use a double loop, we declare two variables, namely i and j.<br><br>Lines 6-8 set the value of each element of the array to 0. Once done, everything is considered to be prime.<br><br>Lines 10-17 are the algorithm called "Sieve of Eratosthenes". The variable i varies from 2 to 99. In line 11, if the value of a[i] is 0, it means that i is a prime number, and the program outputs its value. Then, the variable j is filled with the values 2 times i, 3 times i, ..., in that order, and assign 1 to a[j], which means that j is a composite number.<br><br>Each element of array a possesses the number 1 (composite) or 0 (prime). A variable that has 0 or 1 as its value is called a "flag". Assigning 1, as in line 14, is called "raising a flag".','https://paiza.io/projects/e/Km930OAb0oRy0rHtzlbo-w');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (211197,'(5-b) Triple loop','int i, j, k;\nfor (i = 0; i < 3; i++) {\n    for (j = 0; j < 3; j++) {\n        c[i][j] = 0;\n        for (k = 0; k < 3; k++) {\n            c[i][j] = c[i][j] + a[i][k] * b[k][j];\n        }\n    }\n}',105,'EASY','matrix','This is a program that calculates the square of a 3-by-3 matrix, based on the definition of the matrix product, and outputs the value of the lower right component.<br><br>In lines 3-5, we declare three two-dimensional arrays and also initialize a and b. The values are the same but initialized separately. The array c is not initialized and each component is set to 0 using a for statement.<br><br>When mapping the three arrays a, b, and c to the 3-by-3 matrices A, B, and C, respectively, the calculation C=AB is performed.<br><br>Since we use a triple loop, there are used three variables for the loop: i, j, and k.<br><br>Lines 7-14 are the computation of the matrix product. The for statements on i, j, and k start at 0 and increase by 1, repeating the process for less than 3. Therefore, each variable takes a value between 0 and 2. In mathematics, when referring to the components of a matrix, the upper left is often denoted by the (1,1) component or a11, but in this program the upper left is a[0][0], because the first subscript of the array (the value in [ ]) is 0 in the C language.<br><br>The component-by-component multiplication is the part of line 11 where a[i][k] * b[k][j]. The sum of multiplication by components, which is often written using "Σ" or "..." in math books, is done by combining the for statement on variable k in lines 10-12 and "c[i][j] = c[i][j] + a[i][k] * b[k][j]" in line 11.<br><br>The output is c[2][2], i.e., the value of the bottom right-most component of matrix C. In this program, it is "7".','https://paiza.io/projects/e/h80UMbdaaQekRGmq76wHaQ');
--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url,o_question_id) VALUES (311010,'(5-a)(補) エラトステネスのふるい','for (i = 2; i < 100; i++) {\n    if (!a[i]) {\n        printf("%d ", i);\n        for (j = 2; i * j < 100; j++) {\n            a[i * j] = 1;\n        }\n    }\n}',77,'EASY','s_sieve','【(5-a) エラトステネスのふるい】と同じく、「2」から「97」まで、100未満の素数を<br>小さい数から順に出力します。<br><br>内側のforループは授業のプログラムと全く同じですが、11行目のif (!a[i])は、<br>授業のプログラムや【(5-a) エラトステネスのふるい】の「if (a[i] == 0)」と<br>同じで、「a[i]の値が0と等しいならば」という意味になります。','https://paiza.io/projects/e/WtX-kMRVF1cU5N6CKWklrQ',211073);
--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url,o_question_id) VALUES (311198,'(5-b)(補) 3重ループで...?','int i, j, k;\nfor (i = 0; i < 3; i++) {\n    for (j = 0; j < 3; j++) {\n        for (k = 0; k < 3; k++) {\n            c[i][j] += a[i][k] * b[k][j];\n        }\n    }\n}',88,'EASY','s_matrix','【(5-b) 3重ループで...?】と同じく、行列の積の定義に基づいて、3行3列の行列の<br>2乗を計算し、<br>右下成分の値を出力するプログラムです。<br><br>5行目のcの初期化が、{ 0 }となっています。これで、配列の各値に0を代入する<br>ことになります。正確には、c[0][0]が、書かれた値により0となり、<br>残りの要素の値は、Cの配列初期化の省略時のルールで、0になってくれます。<br>「int c[3][3];」では、0になってくれませんので、注意しましょう。<br><br>10行目では、複合代入演算子の一つ、「+=」が使用されています。<br>「X += Y」は「X = X + Y」と同じになります。<br>ですので10行目は、「c[i][j] = c[i][j] + a[i][k] * b[k][j]」と同じ意味です。<br><br>ところでこのプログラムでは、7行目から9行目までの最後の「{」と、<br>11行目から13行目の「}」を（または11行目から13行目までを丸ごと）取り除いても、<br>同じ結果になります（【(5-b) 3重ループで...?】のプログラムでは結果が変わります）。<br>他にも、取り除くことのできる「{」「}」の組があります。とはいえ、どれも<br>書いておくことをお勧めします。','https://paiza.io/projects/e/lxPpUq9DX89YH3kZkS_fFw',211197);

INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (211238,'(6-a) 65','int i = 65;\nchar c = ''A'';\ndouble d = 65;\nprintf("i = %d\\n", i);\nprintf("c = %d\\n", c);\nprintf("d = %f\\n", d);',86,'EASY','65','このプログラムは、データ型に応じた変数の内容や出力方法などの違いを確認するための<br>ものです。<br><br>3〜5行目で3つの変数を異なるデータ型で宣言し、初期化しています。<br>3行目では変数iをint型で宣言し、整数値65で初期化します。<br>4行目では変数cをchar型で宣言し、文字''A''で初期化となっていますが、ASCIIコードに<br>基づき65という整数値を、変数cは保持します。<br>5行目では変数dをdouble型で宣言し、整数値65で初期化となっていますが、double型に変換<br>された実数値を、変数dは保持します。<br><br>6〜8行目でprintf関数を用いて、3つの変数の値を出力します。<br>C言語では、printfなどの関数で変数の値の表示形式を指定するために「フォーマット指定子」<br>を用います。以下にフォーマット指定子の例を挙げます。<br>「%d」: 10進数の整数値として出力する。<br>「%x」: 16進数の整数値として出力する。<br>「%f」: 実数値として出力する。<br>「%c」: 文字として出力する。<br><br>6行目では、フォーマット指定子が「%d」、変数iの値が65なので、出力は<br>「i = 65」となります。<br><br>7行目では、フォーマット指定子が「%d」、変数cの値が65なので、出力は<br>「c = 65」となります。<br>変数cの値を文字として出力したい場合には、「printf("c = %c\n", c);」と書きます。<br><br>8行目では、フォーマット指定子が「%f」、変数の値は（double型の）65です。出力は<br>「c = 65.000000」となります。<br><br>フォーマット指定子はデータ型に応じて適切に指定する必要があります。<br>「printf("i = %d\n", i);」の「%d」を「%f」に替えたり、<br>「printf("d = %f\n", d);」の「%f」を「%d」に替えたりすると、警告が出て、<br>期待する出力になりません。','https://paiza.io/projects/e/NinwOR8E29o2X6_1bihp-A');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (211392,'(6-b) String scanning','char s[20] = " WAKAYAMADAIGAKUMAE";\nchar c = ''A'';\nfor (i = 1; i <= 18; i++) {\n    if (s[i] == c) {\n        printf("%d ", i - p);\n        p = i;\n    }\n}',95,'EASY','scan','このプログラムは、WAKAYAMADAIGAKUMAEという文字列で、特定の文字の出現を出力する<br>プログラムです。出力は「2 2 2 2 2 3 4」です。Aの文字が、先頭から2文字目、<br>その2文字あと（4文字目）、2文字あと（6文字目）、2文字あと（8文字目）、2文字あと<br>（10文字目）、3文字あと（13文字目）、4文字あと（17文字目）に出現することを表します。<br><br>4行目にcharの配列sを宣言し、初期化します。Wの前には空白文字があります。これにより、<br>s[1]がWの文字になります。<br>5行目は、特定の文字、ここではAを、char型変数cにセットします。<br><br>6行目から11行目のforループで、変数iは1から始まって1ずつ増えます。7行目のs[i]により、<br>sに格納された文字列を1文字ずつ走査（スキャン）します。この繰り返し処理では、<br>iの最後の値は18ですが、s[18]は文字列の最後の文字、Eとなります。<br><br>7行目のif文では、s[i]がcと等しい（同じ文字である）ときに、8～9行目を実行します。<br>8行目のi - pは、前に出力した位置から何文字あと（最初については先頭から何文字目か）を<br>表し、この値を出力します。8行目を「printf("%d ", i)」に置き換えて実行すると、<br>出力されるどの数値も、先頭から何文字目になるかを表します。<br>そして9行目の代入で、特定の文字の最後の出現位置を更新します。<br><br>forループの中では改行していませんので、12行目のところで改行します。','https://paiza.io/projects/e/aOR61s7xbSX6tGcv6A15LA');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (211444,'(6-c) In comparison with one in a million','#include <stdio.h>\n#include <math.h>\nint main(void){\n    double x1, x2;\n    x1 = 2;\n    x2 = 3;\n    while (fabs(x2 - x1) > 1.0e-6) {\n        x1 = x2;\n        x2 = x1 - (x1 * x1 - 5) / (2 * x1);\n    }\n    printf("x = %f\\n", x2);\n    return 0;\n}',154,'FULL','newton','このプログラムは、ニュートン法と呼ばれるアルゴリズムを使用して、ルート5（√5）の<br>近似値を計算します。<br><br>1行目の#includeの行は、これまでと同じですが、2行目の「#include <math.h>」は、<br>数学関数のfabsを呼び出すために書いています。<br><br>4～6行目では、初期値を定めます。<br>√5の平方根は2以上3以下であることはわかっているので、x1=2、x2=3としています。<br>値をそれぞれ-2と-3にすると、-√5を求めることになり、出力は負の数になります。<br><br>7～10行目がニュートン法のアルゴリズムです。<br><br>7行目のfabsは、double型の絶対値を計算する関数です。<br>また1.0e-6は指数表記と呼ばれ、1.0×10の6乗を意味し、百万分の1です。<br>なのでこの行は、x2とx1の差の絶対値が百万分の1より大きい間、8～9行目の処理を繰り返す<br>という意味になります。<br><br>8行目と9行目で、x1とx2の値を更新します。<br>9行目は、ニュートン法で用いられる x2 = x1 - f(x1) / f''(x1) という式と、<br>f(x)=x*x-5という関数とを組み合わせてできた代入です。<br>f(x)=0を解くと、x=±√5です（f(x)=0の解が複数ある場合、ニュートン法は<br>そのうちの1つだけを求めます）。またf(x)の導関数は、f''(x)=2*xです。<br><br>11行目で、変数x2の値を解として出力します。このプログラムでは「x = 2.236068」です。','https://paiza.io/projects/e/h8Ad3T_L3iykLobJgguBAA');
--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url,o_question_id) VALUES (311211,'(6-a)(補) 90','int i = 90;\nchar c = ''Z'';\nprintf("i = %d\\n", i);\nprintf("c = %d\\n", c);\nprintf("c = %c\\n", c);',75,'EASY','s_90','【(6-a) 65】と同じく、データ型に応じた変数の内容や出力方法などの違いを確認するためのプログラムです。<br><br>3行目では変数iをint型で宣言し、整数値90で初期化しています。<br>4行目では変数cをchar型で宣言し、文字''Z''で初期化していますが、ASCIIコードに基づき90という整数値を、変数cは保持します。<br>なお、初期化の際に、"Z"と書いてしまうと、文字列になってしまい、うまく動作しません。<br><br>5～7行目でprintf関数を用いて、2つの変数の値を出力しています。<br>5行目は、フォーマット指定子が「%d」で、出力は「i = 90」となります。<br>6行目は、フォーマット指定子が「%d」で、出力は「c = 90」となります。<br>7行目は、フォーマット指定子が「%c」で、出力は「c = Z」となります。','https://paiza.io/projects/e/8xjUhEU4tiUxT1trkDv6MQ',211238);
--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url,o_question_id) VALUES (311338,'(6-b)(補) 文字列走査','char s[19] = "WAKAYAMADAIGAKUMAE";\nchar c = ''A'';\nfor (i = 0; i <= 17; i++) {\n    if (s[i] == c) {\n        printf("%d ", i + 1);\n    }\n}',91,'EASY','s_scan','このプログラムは、WAKAYAMADAIGAKUMAEという文字列で、特定の文字の出現を出力する<br>プログラムです。出力は「2 4 6 8 10 13 17」です。Aの文字が、先頭から2文字目、<br>4文字目、6文字目、8文字目、10文字目、13文字目、17文字目に出現することを表します。<br><br>4行目にcharの配列sを宣言し、WAKAYAMADAIGAKUMAEで初期化しています。<br>s[0]がWの文字になります。<br>5行目は、特定の文字、ここではAを、char型変数cにセットします。<br><br>6行目から10行目までのforループで、変数iは0から始まって1ずつ増えます。<br>7行目のs[i]により、sに格納された文字列を1文字ずつ走査（スキャン）します。<br>この繰り返し処理では、iの最後の値は17ですが、s[17]は文字列の最後の文字、<br>Eとなります。<br><br>7行目のif文では、s[i]がcと等しい（同じ文字である）ときに、8行目を実行します。<br>8行目のi + 1により、iに1を加えた値を出力します。たとえばiの値が1のとき、<br>s[i]は''A''と等しく、7行目の条件判定が真となり、8行目では、文字列の先頭から2文字目<br>であることを意味する「2」（それと空白文字）を出力します。<br><br>C言語の配列は0から始まりますが、これを「0オリジン」と呼びます。それに対し、<br>一般に我々が数を数えるときは「いち、に、さん、…」のように1から始めます。<br>「1オリジン」といいます。「0オリジン」のデータ構造を参照しながら，「1オリジン」の<br>慣例に従って「何文字目」を出力したいので、「i」ではなく「i + 1」としているのです。<br><br>forループの中では改行していませんので、11行目のところで改行します。','https://paiza.io/projects/e/fSwJKCDX3okbugUqF_eTvg',211392);
--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url,o_question_id) VALUES (311463,'(6-c)(補) 百万分の1と比べて...?','#include <stdio.h>\n#include <math.h>\nint main(void){\n    double x1, x2, mid;\n    x1 = 2;\n    x2 = 3;\n    while (fabs(x2 - x1) > 1.0e-6) {\n        mid = (x1 + x2) / 2;\n        if ((x1 * x1 - 5) * (mid * mid - 5) < 0) {\n            x2 = mid;\n        } else {\n            x1 = mid;\n        }\n    }\n    printf("x = %f\\n", x2);\n    return 0;\n}',192,'FULL','s_bsearch','【(6-c) 百万分の1と比べて...?】と同じく、ルート5（√5）の近似値を計算しますが、<br>使用しているアルゴリズムは二分法です。微分（導関数）を使用しませんが、繰り返しの<br>回数がニュートン法よりも多くなります。<br><br>4～6行目では、初期値を定めます。<br>√5の平方根は2以上3以下であることはわかっているので、x1=2、x2=3としています。<br>値をそれぞれ-2と-3にすると、-√5を求めることになり、出力は負の数になります。<br><br>なお、midはx2とx3の平均値ですが、while文内で計算するので、ここで初期化は行いません。<br><br>7～14行目が二分法のアルゴリズムです。<br><br>7行目は、【(6-c) 百万分の1と比べて...?】と同じで、x2とx1の差の絶対値が百万分の1<br>より大きい間、8～13行目の処理を繰り返すという意味になります。<br><br>8行目に、x1とx2の平均値を求めてmidに代入します。<br>9行目のif文内の条件式は、f(x) = x * x - 5 という関数（f(x)＝0 ⇔ x＝±√5）と、<br>二分法の式であるf(x1) * f(mid) < 0を組み合わせて出来た式です。<br>この条件式が真のとき、すなわちf(x1)とf(mid)が異符号である場合、x2の値をmidとし、x1は変更しません。<br>この条件式が偽のとき、すなわちf(x1)とf(mid)が同符号である場合、x1の値をmidとし、x2は変更しません。<br><br>15行目で、変数x2の値を解として出力します。このプログラムでは「x = 2.236069」です。','https://paiza.io/projects/e/OexKougkS5HhQQtH6E7Rvg',211769);

INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000000, 99999999, 210139, '2021-10-19T00:34:01.977Z', '2021-10-19T00:34:09.612Z', 0, '70,0.112;72,0.255;69,0.13;6E,0.065;74,0.055;66,0.492;28,0.403;22,0.058;48,0.313;65,0.202;6C,0.117;6C,0.174;6F,0.188;2C,0.244;57,0.366;6F,0.16;72,0.224;6C,0.544;64,0.059;21,0.308;5C,0.26;6E,0.353;22,0.144;29,0.219;3B,0.492;72,0.237;65,0.168;74,0.197;75,0.076;72,0.192;6E,0.106;30,0.367;3B,0.355');
INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000001, 99999999, 210957, '2021-10-28T05:42:28.665Z', '2021-10-28T05:42:59.704Z', 1, '66,0.812;6F,0.132;72,0.106;28,0.295;69,0.297;3D,0.638;31,0.156;3B,0.301;69,0.826;3C,0.301;3D,0.312;31,0.194;35,0.282;3B,0.438;69,0.488;2B,0.322;2B,0.141;29,0.304;7B,0.455;70,0.315;72,0.167;69,0.13;6E,0.064;74,0.062;66,0.197;28,0.313;22,0.118;25,0.696;64,0.362;3A,0.754;28,0.705;25,0.317;64,0.286;2C,0.522;25,0.458;64,0.199;29,0.955;5C,0.252;6E,0.491;22,0.234;2C,0.257;69,1.043;2C,0.098;78,0.297;2C,0.108;79,0.412;29,0.417;3B,0.559;69,0.447;66,0.077;28,0.3;78,0.223;3D,0.396;3D,0.132;6E,0.278;29,0.388;7B,0.405;6E,0.475;2B,0.477;2B,0.149;3B,0.333;78,1.027;3D,0.931;31,0.178;3B,0.25;74x,0.482;42S,0.388;79,0.094;3D,0.406;6E,0.522;3B,0.461;7D,0.526;65,0.302;6C,0.12;73,0.115;65,0.174;7B,0.44;78,0.415;2B,0.346;2B,0.153;3B,0.297;79,0.471;2D,0.355;2D,0.127;3B,0.279;7D,0.355;7D,0.146');
INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000002, 99999999, 210957, '2021-10-28T06:35:33.988Z', '2021-10-28T06:36:25.684Z', 0, '66,0.528;6F,0.126;72,0.132;28,1.562;69,0.262;3D,0.398;31,0.767;3B,0.169;69,1.166;3C,0.483;3D,0.295;31,1.192;35,0.08;3B,0.745;69,0.9;2B,0.341;2B,0.13;29,0.646;7B,0.859;70,1.602;72,0.486;69,0.086;6E,0.179;74,0.097;66,0.168;28,1.166;22,0.2;25,0.771;64,0.93;3A,0.521;28,1.898;25,0.663;64,0.34;2C,1.067;25,0.688;64,0.351;29,0.936;5C,0.945;6E,0.08;22,0.883;2C,0.315;69,0.85;2C,0.332;78,0.78;2C,0.148;79,0.378;29,1.05;3B,0.648;69,1.155;66,0.091;28,0.8;78,0.561;3D,0.708;3D,0.121;6E,0.824;29,0.786;7B,0.459;6E,1.165;2B,0.479;2B,0.125;3B,0.238;78,1.482;3D,0.485;31,0.245;3B,0.771;79,0.923;3D,0.695;6E,0.988;3B,0.42;7D,1.152;65,0.877;6C,0.105;73,0.123;65,0.185;7B,1.18;78,1.321;2B,0.585;2B,0.128;3B,0.287;79,0.936;2D,0.364;2D,0.123;3B,0.507;7D,0.848;7D,0.13');
INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000003, 99999999, 211444, '2021-11-11T05:42:09.322Z', '2021-11-11T05:43:00.437Z', 2, '23,0.307;69,0.52;6E,0.066;63,0.079;6C,0.154;75,0.083;64,0.073;65,0.177;3C,0.303;73,0.306;74,0.156;64,0.216;69,0.048;6F,0.092;2E,0.335;68,0.331;3E,0.446;23,0.59;69,0.248;6E,0.069;63,0.095;6C,0.093;75,0.099;64,0.097;65,0.179;3C,0.311;6D,0.297;61,0.066;74,0.247;68,0.064;2E,0.298;68,0.312;3E,0.352;69,0.448;6E,0.063;74,0.402;6D,0.174;61,0.099;69,0.198;6E,0.237;28,0.481;76,0.237;6F,0.08;69,0.048;64,0.116;29,0.261;7B,0.426;64,0.345;6F,0.04;75,0.092;62,0.229;6C,0.055;65,0.033;78,0.253;31,0.301;2C,0.325;78,0.345;32,0.252;3B,0.379;78,1.045;31,0.396;3D,0.322;32,0.227;3B,0.588;78,0.252;32,0.26;3D,0.356;33,0.215;3B,0.731;77,0.499;68,0.086;69,0.05;6C,0.231;65,0.114;28,0.473;66,0.461;61,0.377;62,0.175;73,0.199;28,0.705;78,0.213;32,0.271;2D,0.412;78,0.238;32x,0.27;42S,0.768;31,0.089;29,0.377;3E,0.714;31,0.261;2E,0.194;30,0.4;65,0.458;2D,0.528;36,0.326;29,1.082;7B,0.506;78,0.435;31,0.274;3D,0.362;78,0.184;32,0.317;3B,0.261;78,0.281;32,0.268;3D,0.542;78,0.181;31,0.311;2D,0.578;28,0.525;78,0.174;31,0.355;2A,0.419;78,0.212;31,0.336;2D,0.947;35,0.441;29,0.518;2F,0.499;28,0.719;78x,0.189;42S,0.892;32,0.172;2A,0.33;78,0.191;31,0.241;29,0.308;3B,0.472;7D,0.548;70,0.407;72,0.385;69,0.059;6E,0.064;74,0.096;66,0.189;28,0.368;22,0.192;78,0.359;3D,0.663;25,0.425;66,0.869;5C,0.149;6E,0.286;22,0.271;2C,1.098;78,0.354;32,0.292;29,0.297;3B,1.127;72,0.201;65,0.178;74,0.208;75,0.052;72,0.131;6E,0.147;30,0.44;3B,1.05;7D,0.375');

INSERT INTO model(response_id) VALUES(1000000000);
INSERT INTO model(response_id) VALUES(1000000001);
INSERT INTO model(response_id) VALUES(1000000002);
INSERT INTO model(response_id) VALUES(1000000003);
--UPDATE question SET o_question_id=211444 WHERE question_id=311463;

INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000004, 99999999, 211238, '2022-11-15T02:59:00.148Z', '2022-11-15T02:59:29.749Z', 1, '69,0.4;6E,0.074;74,0.485;69,0.341;3D,0.517;36,0.654;35,0.398;3B,0.464;63,0.602;68,0.192;61,0.153;72,0.389;63,0.248;3D,0.354;27,0.617;41,0.163;27,0.136;3B,0.631;64,0.458;6F,0.076;75,0.079;62,0.228;6C,0.053;65,0.056;64,0.26;3D,0.559;36,0.524;35,0.057;3B,0.562;70,0.377;72,0.24;69,0.073;6E,0.077;74,0.093;66,0.196;28,0.353;22,0.187;69,0.643;3D,0.317;25,0.638;64,0.317;5C,0.369;6E,0.509;22,0.214;29x,0.188;42S,0.501;2C,0.626;69,0.408;29,0.313;3B,0.484;70,0.459;72,0.188;69,0.071;6E,0.075;74,0.075;66,0.188;28,0.334;22,0.134;63,0.415;3D,0.405;25,0.5;64,0.886;5C,0.114;6E,0.3;22,0.273;2C,0.58;63,0.337;29,0.343;3B,0.392;70,0.353;72,0.23;69,0.079;6E,0.072;74,0.08;66,0.193;28,0.361;22,0.152;64,0.453;3D,0.483;25,0.473;66,0.452;5C,0.257;6E,0.448;22,0.234;2C,0.994;64,0.622;29,0.326;3B,0.416');
--INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000005, 99999999, 311211, '2022-11-15T03:05:07.483Z', '2022-11-15T03:05:33.299Z', 1, '69,0.353;6E,0.093;74,0.255;69,0.418;3D,0.505;39,0.566;30,0.056;3B,0.65;63,0.221;68,0.191;61,0.177;72,0.225;63,0.585;3D,0.353;27,0.348;5A,0.156;27,0.202;3B,0.544;70,0.344;72,0.204;69,0.111;6E,0.071;74,0.085;66,0.205;28,0.381;22,0.221;69,0.664;3D,0.371;25,0.47;64,0.405;5C,0.213;6E,0.605;22,0.501;2C,0.82;69,0.261;29,0.569;3B,0.436;70,0.389;72,0.425;69,0.056;6E,0.082;74,0.107;66,0.193;28,0.325;22,0.153;63,0.338;3D,0.459;25,0.566;64,0.301;5C,0.321;6E,0.487;22,0.2;2C,0.353;63,0.647;29,0.705;3B,0.477;70,0.4;72,0.178;69,0.113;6E,0.059;74,0.065;66,0.201;28,0.408;22,0.093;63,0.357;3D,0.453;25,0.582;63,0.246;5C,0.472;6E,0.346;22,0.192;29x,0.214;42S,0.645;2C,0.538;63,0.183;29,0.373;3B,0.282');
INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000006, 99999999, 211392, '2022-11-15T03:29:26.049Z', '2022-11-15T03:29:58.366Z', 2, '63,0.738;68,0.12;61,0.174;72,0.329;73,0.746;5B,0.201;32,0.213;30,0.276;5D,0.381;22x,0.37;42S,0.693;3D,0.622;22,0.097;57,0.416;41,0.234;4B,0.302;41,0.107;59,0.538;41,0.108;4D,0.144;41,0.089;44,0.225;41,0.2;49,0.095;47,0.163;41,0.112;4B,0.118;55,0.044;4D,0.271;41,0.062;45,0.255;22,0.245;3B,0.393;63,0.593;68,0.199;61,0.151;72,0.297;63,0.238;3D,0.46;27,0.393;41,0.168;27,0.178;3B,0.552;66,0.333;6F,0.125;72,0.128;28,0.321;69,0.329;75x,0.003;42S,0.533;3D,0.679;31,0.172;3B,0.442;69,0.819;3C,0.236;3D,0.28;31,0.214;38,0.24;3B,0.55;69,0.528;2B,0.338;2B,0.136;29,0.31;7B,0.469;69,0.566;66,0.068;28,0.514;73,0.257;5B,0.257;69,0.347;5D,0.322;3D,0.324;3D,0.144;63,0.202;29,0.381;7B,0.436;70,0.337;72,0.181;69,0.125;6E,0.068;74,0.084;66,0.239;28,0.381;22,0.126;25,0.66;64,0.245;53PC,0.263;22,0.345;2C,0.425;69,0.598;2D,0.306;70,0.295;29,1.019;3B,0.329;70,0.914;3D,0.238;69,0.396;3B,1.055;7D,0.253;7D,0.131');
--INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000007, 99999999, 311338, '2022-11-15T03:30:56.960Z', '2022-11-15T03:31:25.098Z', 0, '63,0.476;68,0.273;61,0.19;72,0.24;73,0.833;5B,0.29;31,0.376;39,0.247;5D,0.308;3D,0.594;22,0.102;57,0.322;41,0.205;4B,0.133;41,0.168;59,0.129;41,0.144;4D,0.146;41,0.148;44,0.249;41,0.212;49,0.077;47,0.118;41,0.135;4B,0.104;55,0.065;4D,0.3;41,0.073;45,0.264;22,0.358;3B,0.445;63,0.694;68,0.169;61,0.176;72,0.372;63,0.197;3D,0.438;27,0.408;41,0.076;27,0.136;3B,0.566;66,0.31;6F,0.164;72,0.124;28,0.341;69,0.245;3D,0.698;30,0.283;3B,0.575;69,0.37;3C,0.396;3D,0.491;31,0.343;37,0.29;3B,0.551;69,0.339;2B,0.321;2B,0.132;29,0.287;7B,0.545;69,0.725;66,0.08;28,0.328;73,0.21;5B,0.249;69,0.56;5D,0.321;3D,0.437;3D,0.151;63,0.227;29,0.353;7B,0.448;70,0.377;72,0.165;69,0.128;6E,0.085;74,0.075;66,0.241;28,0.634;22,0.088;25,0.381;64,0.273;53PC,0.539;22,0.282;2C,0.521;69,0.509;2B,0.606;31,0.236;29,0.326;3B,0.425;7D,0.284;7D,0.117');
INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000008, 99999999, 211444, '2022-11-15T03:33:01.822Z', '2022-11-15T03:33:50.147Z', 1, '23,0.316;69,0.522;6E,0.088;63,0.093;6C,0.16;75,0.081;64,0.064;65,0.193;3C,0.405;73,0.22;74,0.262;64,0.213;69,0.06;6F,0.093;2E,0.529;68,0.438;3E,0.501;23,0.879;69,0.328;6E,0.073;63,0.087;6C,0.13;75,0.075;64,0.096;65,0.194;3C,0.36;6D,0.311;61,0.033;74,0.294;68,0.065;2E,0.389;68,0.356;3E,0.576;69,0.598;6E,0.08;74,0.151;6D,0.185;61,0.112;69,0.13;6E,0.176;28,0.449;76,0.261;6F,0.096;69,0.081;64,0.116;29,0.32;7B,0.486;64,0.606;6F,0.12;75,0.081;62,0.245;6C,0.043;65,0.064;78,0.325;31,0.269;2C,0.253;78,0.204;32,0.272;3B,0.274;78,0.307;31,0.338;3D,0.492;32,0.224;3B,0.309;78,0.209;32,0.287;3D,0.361;33,0.262;3B,0.344;77,0.621;68,0.078;69,0.047;6C,0.18;65,0.101;28,0.434;66,0.552;61,0.149;62,0.136;73,0.257;28,0.718;78,0.225;32,0.277;2D,0.292;78,0.281;31,0.378;29,0.553;3E,0.618;31,0.34;2E,0.27;30,0.324;65,0.321;2D,0.61;36,0.436;29,0.449;7B,0.502;78,0.342;31,0.287;3D,0.373;78,0.23;32,0.282;3B,0.279;78,0.273;32,0.295;3D,0.622;78,0.194;31,0.317;2D,0.955;28,0.345;78,0.225;31,0.298;2A,0.359;78,0.183;31,0.326;2D,0.529;35,0.803;29,0.348;2F,0.57;28,0.669;32,0.213;2A,0.417;78,0.277;31,0.265;29,0.352;3B,0.613;7D,0.507;70,0.381;72,0.208;69,0.128;6E,0.086;74,0.055;66,0.228;28,0.586;22,0.081;78,0.306;3D,0.523;25,0.81;66,0.289;5C,0.461;6E,0.385;22,0.229;2C,0.404;78,0.206;31x,0.397;42S,0.369;32,0.12;29,0.402;3B,1.014;72,0.172;65,0.182;74,0.212;75,0.073;72,0.128;6E,0.14;30,0.5;3B,0.538;7D,0.208');
--INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000009, 99999999, 311463, '2022-11-15T03:38:08.579Z', '2022-11-15T03:39:09.664Z', 2, '23,0.663;69,0.341;6E,0.076;63,0.117;6C,0.132;75,0.084;64,0.084;65,0.202;3C,0.403;73,0.264;74,0.243;64,0.181;69,0.081;6F,0.057;2E,0.488;68,0.278;3E,0.364;23,0.743;69,0.244;6E,0.1;63,0.092;6C,0.124;75,0.083;64,0.071;65,0.196;3C,0.325;6D,0.248;61,0.071;74,0.261;68,0.047;2E,0.339;68,0.364;3E,0.559;69,0.487;6E,0.09;74,0.14;6D,0.173;61,0.108;69,0.107;6E,0.145;28,0.438;76,0.256;6F,0.08;69,0.058;64,0.107;29,0.293;7B,0.465;64,0.356;6F,0.122;75,0.075;62,0.225;6C,0.039;65,0.069;78,0.26;31,0.237;2C,0.208;78,0.208;32,0.258;2C,0.293;6D,0.396;69,0.077;64,0.156;3B,0.465;78,0.485;31,0.386;3D,0.351;32,0.203;3B,0.251;78,0.22;32,0.314;3D,0.361;33,0.279;3B,0.345;77,0.491;68,0.096;69,0.032;6C,0.189;65,0.08;28,0.413;66,0.577;61,0.111;62,0.161;73,0.345;28,0.834;78,0.164;32,0.274;2D,0.261;78,0.508;31,0.353;29,0.346;3E,0.598;31,0.453;2E,0.59;30,0.448;65,0.277;2D,0.314;36,0.47;29,0.404;7B,0.51;6D,0.533;69,0.06;64,0.258;3D,1.11;28,0.265;78,0.208;31,0.334;2B,0.419;78,0.206;32,0.262;29,0.296;2F,0.409;32,0.084;3B,0.437;69,0.635;66,0.051;28,0.35;28,0.143;78,0.265;31,0.316;2A,0.522;78,0.277;31,0.337;2D,0.501;35,0.888;29,0.652;2A,0.563;28,0.568;6D,0.325;69,0.061;64,0.153;2Bx,0.621;2Ax,0.006;42S,0.683;42S,0.201;2A,0.713;6D,0.354;69,0.058;64,0.223;2D,0.878;35,0.321;29,0.465;3C,0.715;30,0.369;29,0.269;7B,0.54;78,0.556;32,0.299;3D,0.369;6D,0.316;69,0.052;64,0.205;3B,0.369;7D,0.574;65,0.277;6C,0.173;73,0.091;65,0.191;7B,0.4;78,0.347;31,0.297;3D,0.586;6D,0.289;69,0.052;64,0.08;3B,0.446;7D,0.445;7D,0.158;70,0.505;72,0.244;69,0.072;6E,0.085;74,0.081;66,0.223;28,0.449;22,0.104;78,0.365;3D,0.495;25,0.567;66,0.818;5C,0.132;6E,0.365;22,0.233;2C,0.438;78,0.146;32,0.335;29,0.583;3B,1.1;72,0.243;65,0.173;74,0.204;75,0.072;72,0.122;6E,0.171;30,0.467;3B,0.79;7D,0.22');

INSERT INTO model(response_id) VALUES(1000000004);
--INSERT INTO model(response_id) VALUES(1000000005);
INSERT INTO model(response_id) VALUES(1000000006);
--INSERT INTO model(response_id) VALUES(1000000007);
INSERT INTO model(response_id) VALUES(1000000008);
--INSERT INTO model(response_id) VALUES(1000000009);

INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (211591,'(7-a) Positive or negative','int sign(int n){\n    return (n > 0) - (n < 0);\n}\nprintf("%d\\n", sign(-1 + 2));',59,'EASY','sign','このプログラムでは「符号関数」を自作し、3つの入力に対し結果を返しています。<br>与えられた実数が正なら1、負なら-1、0なら0を返す関数を、符号関数といいます。<br><br>自作関数signは、整数型の値をとります。戻り値も整数型の値です。<br>引数をnに格納し、3行目では特殊な（ただしC言語のルールとして認められた）方法で<br>計算を行い、結果を返します。<br><br>ルールは、大小比較の結果が真のとき、その式の結果は1に、偽のときは0になる、<br>というものです。<br>引数nが正の値のとき、n &gt; 0は真なので1、n &lt; 0は偽なので0となり、<br>「(n &gt; 0) - (n &lt; 0)」は、1 - 0で1です（そしてこの値が戻り値となります）。<br>同様にnが負の値のとき、n &gt; 0は偽なので0、n &lt; 0は真なので1、そして<br>「(n &gt; 0) - (n &lt; 0)」は、0 - 1で-1です。<br>nが0のときは、n &gt; 0は偽なので0、n &lt; 0も偽なので0、そして<br>「(n &gt; 0) - (n &lt; 0)」は、0 - 0で0です。<br><br>このプログラムでは、6～8行目のそれぞれで、sign関数を呼び出しています。<br>6行目ではsign(-333)により、-333が、3行目の仮引数nに渡されます（int n = -333;<br>のあと、関数の中の処理をしていく、と考えるといいでしょう）。<br>7行目ではsign(-1 + 2)により、計算結果の1が渡されます。<br>8行目ではsign(0.0)ですが、関数の仮引数はint型なので，整数値の0が渡されます。<br><br>出力は、1行目が「-1」、2行目は「1」、3行目は「0」です。','https://paiza.io/projects/e/j_SHX0aDwy-1Ce4F6QQOww');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (211654,'(7-b) Distance calculation','double distance(double x1, double y1,\n                double x2, double y2){\n    double dx = x2 - x1;\n    double dy = y2 - y1;\n    return sqrt(dx * dx + dy * dy);\n}',107,'EASY','distance','三平方の定理を用いて、2次元平面上の2点間の距離を求めるプログラムです。<br><br>距離を求めるのは、3行目から始まる自作関数distanceです。<br>以下のとおり、4つの引数をとります。<br>x1: 1つ目の点のx座標<br>y1: 1つ目の点のy座標<br>x2: 2つ目の点のx座標<br>y2: 2つ目の点のy座標<br>戻り値となる距離と合わせて、この関数が扱う数値は全てdouble型です。<br><br>7行目では平方根の計算にsqrt関数を使用しています。<br>sqrt関数を使用するにはヘッダファイル「math.h」を読み込む必要があり、<br>このプログラムでは2行目で指定しています。<br><br>10～11行目では2点の座標を表す変数をdouble型で宣言し、初期化します。<br>これらの変数と、3～4行目の変数（仮引数）は、それぞれ同じ名前ですが、<br>有効範囲が異なるため、別の実体となります。例えば、関数distanceの中で、<br>変数x1の値を変更しても、main関数の中のx1は変わりません。<br><br>12〜14行目ではprintf関数を使用して、2点間の距離を表示します。<br>表示結果は「(-0.400000,1.220000)-(2.600000,-2.780000): 5.000000」です。<br>距離は5です。なお、2点のx座標の差は3、y座標の差は4となります。<br><br>3行目の「(」と4行目の「)」、12行目の最初の「(」と14行目の最後の「)」が、<br>それぞれ、対応する括弧となります。多くの場合、ペアとなる「(」と「)」や「[」と「]」は<br>同じ行に書きますが、このように、異なる行になってもかまいません。','https://paiza.io/projects/e/EYQ0SWQ4-AL2gGDM_kW7Yw');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (211769,'(7-c) Parity bit','void parity(int a[8]){\n    int i, b = 0;\n    for (i = 0; i < 7; i++) {\n        b = (b + a[i]) % 2;\n    }\n    a[7] = b;\n}',68,'EASY','paritybit','0と1の並びの最後に、パリティビットを設定するというプログラムです。<br>パリティビットは、通信の誤り検出を行うための最も単純な仕組みです。<br><br>このプログラムでは3つの関数を定義しています。<br>2～8行目のprintarray関数は、配列aの各要素を、空白区切りで出力します。<br>9～15行目のparity関数で、パリティビットを設定します。<br>16～22行目はmain関数です。<br>printarray関数とparity関数は、戻り値の型がvoidで、何も返しません。どちらにも、<br>return文を書いていません。<br><br>parity関数を詳しく見ていきます。この関数は配列を引数にとります。<br>10行目で、forループ用の変数iと、パリティビット算出用の変数bを宣言し、bは0で<br>初期化します。<br><br>11～13行目のforループで、bの値を更新します。配列の要素を足して2で割った余りを、<br>新たなbの値とします。<br>a[0]からa[6]までには0か1のいずれかが格納されていて、このforループを終えたとき、<br>a[0]からa[6]までの1の数が奇数個なら、bの値は1で、偶数個なら、bの値は0となります。<br><br>14行目で、このbの値を、a[7]に代入します。変数bは、この関数の外では参照できませんが、<br>配列aは、関数の中で要素の値を変更し、呼び出し元で参照できます（なぜこのような<br>ことができるのかというと、関数の仮引数・実引数として配列を指定したとき、実際には<br>ポインタになるからです）。<br><br>パリティビットを含むすべての要素（このプログラムでは、a[0]からa[7]までの8個）<br>を見ると、1の数は偶数個になります。上で「通信の誤り検出」と書きましたが、<br>この8ビットを送って、受け取った側では1の数が奇数個だったら、通信に誤りがあったと<br>判断できるのです。<br><br>main関数では、まず、17行目の初期化を含む配列の宣言で、各要素に値が格納されます。<br>この配列aを実引数として、18行目にprintarray、19行目にparity、20行目に再びprintarrayの<br>各関数を呼び出します。<br>19行目の呼び出しの中で、a[7]=1の代入が行われます。<br>出力は、1行目は「0 0 1 0 0 1 1 999」、2行目は「0 0 1 0 0 1 1 1」となります。','https://paiza.io/projects/e/RByRDD0BJJfjEjg-fbpeeg');
--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url,o_question_id) VALUES (311512,'(7-a)(補) 正か負か','int sign(int n){\n    if (n == 0) return 0;\n    return n / abs(n);\n}\nprintf("%d\\n", sign(-1 + 2));',72,'EASY','s_sign','【(7-a) 正か負か】と同じく、「符号関数」を自作し、3つの入力に対し結果を返しています。<br><br>自作関数signは、整数型の値をとります。戻り値も整数型の値です。<br>引数をnに格納して、nが0のときは戻り値も0とし、そうでないときは、n/|n|を計算して、<br>1または-1を返します。ここで|n|はnの絶対値です。<br><br>4行目のif文には、「{」「}」がありませんが、文が一つだけのとき（ここでは<br>「return 0;」だけなので）、省略できます。<br><br>5行目では、abs関数が使われています。これは、int型の値を引数にとりその絶対値を返す<br>ライブラリ関数で、使用の際には、「#include <stdlib.h>」が必要です。<br><br>このプログラムでは、8～10行目のそれぞれで、sign関数を呼び出しています。<br>出力は、1行目が「-1」、2行目は「1」、3行目は「0」です。','https://paiza.io/projects/e/oJ00Wb6kW6M1mXJjp2pe-A',211591);
--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url,o_question_id) VALUES (311630,'(7-b)(補) マンハッタン距離','double distance(double x1, double y1,\n                double x2, double y2){\n    double dx = fabs(x2 - x1);\n    double dy = fabs(y2 - y1);\n    return dx + dy;\n}',107,'EASY','s_manhattan','2次元平面上の2点間のマンハッタン距離を求めるプログラムです。<br><br>マンハッタン距離とは、各座標の差の絶対値の総和のことです。<br>点P(x1,y1)、点Q(x2,y2)に対するマンハッタン距離dは、絶対値記号|...|を用いて、<br>d = |x1 - x2| + |y1 - y2|と表せます。<br><br>距離を求めるのは、3行目から始まる自作関数distanceです。<br>2点のxy座標、戻り値となる距離のいずれも、double型にしています。<br><br>5～6行目では絶対値の計算にfabs関数を使用しています。<br>fabs関数を使用するにはヘッダファイル「math.h」を読み込む必要があり、<br>このプログラムでは2行目で指定しています。<br><br>12〜14行目ではprintf関数を使用して、2点間の距離を表示します。<br>表示結果は「(-0.400000,1.220000)-(2.600000,-2.780000): 7.000000」です。<br>2点のx座標の差の絶対値が3、y座標の差の絶対値が4となるため、マンハッタン距離は7です。','https://paiza.io/projects/e/AIOecxmwDk9y1MJwXefNHQ',211654);
--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url,o_question_id) VALUES (311761,'(7-c)(補) パリティビット','void parity(int a[8]){\n    int i, b = 0;\n    for (i = 0; i < 7; i++) {\n        b = (b + a[i]) % 2;\n    }\n    a[7] = !b;\n}',69,'EASY','s_paritybit','【(7-c) パリティビット】と同じく、0と1の並びの最後に、パリティビットを設定する<br>というプログラムです。<br><br>【(7-c) パリティビット】との違いは、14行目だけです。<br>「a[7] = !b;」のうち「!」は、否定演算子といいます。<br>bが0のとき、!bは1に、bが0以外（ここでは1）のとき、!bは0になり、いずれかが<br>a[7]に代入されます。このプログラムでは、13行目までのforループを終えた時点で、<br>bの値は1なので、a[7]=0となります。<br><br>出力は、1行目は「0 0 1 0 0 1 1 999」、2行目は「0 0 1 0 0 1 1 0」となります。<br>17行目の配列の初期値の最初の7個を、0または1で任意に変更して、実行しても、<br>出力の2行目の「1」は奇数個になります。','https://paiza.io/projects/e/6t77C_YFGUolO1PACzhE9w',211769);
--UPDATE question SET commentary='【(7-a) 正か負か】と同じく、「符号関数」を自作し、3つの入力に対し結果を返しています。<br><br>自作関数signは、整数型の値をとります。戻り値も整数型の値です。<br>引数をnに格納して、nが0のときは戻り値も0とし、そうでないときは、n/|n|を計算して、<br>1または-1を返します。ここで|n|はnの絶対値です。<br><br>4行目のif文には、「{」「}」がありませんが、文が一つだけのとき（ここでは<br>「return 0;」だけなので）、省略できます。<br><br>5行目では、abs関数が使われています。これは、int型の値を引数にとりその絶対値を返す<br>ライブラリ関数で、使用の際には、「#include &lt;stdlib.h&gt;」が必要です。<br><br>このプログラムでは、8～10行目のそれぞれで、sign関数を呼び出しています。<br>出力は、1行目が「-1」、2行目は「1」、3行目は「0」です。' where question_id=311512;

INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000010, 99999999, 211591, '2022-11-22T06:52:03.287Z', '2022-11-22T06:52:23.224Z', 1, '69,0.352;6E,0.077;74,0.072;73,0.428;69,0.146;67,0.212;6E,0.125;28,0.366;69,0.332;6E,0.053;74,0.148;6E,0.237;29,0.458;7B,0.496;72,0.566;65,0.18;74,0.226;75,0.079;72,0.117;6E,0.193;28,0.64;6E,0.369;3E,0.502;39x,0.396;42S,0.643;30,0.376;29,0.294;2D,0.432;28,0.398;6E,0.42;3C,0.514;30,0.396;29,0.406;3B,0.546;7D,0.422;70,0.397;72,0.175;69,0.109;6E,0.079;74,0.075;66,0.227;28,0.556;22,0.081;25,0.761;64,0.366;5C,0.373;6E,0.42;22,0.184;2C,0.481;73,0.434;69,0.172;67,0.215;6E,0.145;28,0.443;2D,0.761;31,0.157;2B,0.569;32,0.181;29,0.318;29,0.167;3B,0.473');
INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000011, 99999999, 211654, '2022-11-22T06:57:25.747Z', '2022-11-22T06:57:58.959Z', 2, '64,0.293;6F,0.097;75,0.082;62,0.27;6C,0.046;65,0.141;64,0.547;69,0.164;73,0.46;74,0.23;61,0.123;6E,0.162;63,0.115;65,0.254;28,0.46;64,0.262;6F,0.084;75,0.079;62,0.27;6C,0.06;65,0.08;78,0.353;31,0.276;2C,0.298;64,0.396;6F,0.12;70x,0.01;75x,0.051;42S,0.874;42S,0.181;75,0.649;62,0.25;6C,0.026;65,0.099;79,0.722;31,0.101;2C,0.357;64,0.487;6F,0.084;75,0.072;62,0.272;6C,0.011;65,0.145;78,0.269;32,0.325;2C,0.281;64,0.388;6F,0.113;75,0.07;62,0.247;6C,0.049;65,0.056;79,0.639;32,0.207;29,0.358;7B,0.538;64,0.552;6F,0.084;75,0.065;62,0.247;6C,0.03;65,0.084;64,0.377;78,0.27;3D,0.638;78,0.368;32,0.324;2D,1.049;78,0.24;31,0.271;3B,0.274;64,0.456;6F,0.086;75,0.086;62,0.221;6C,0.069;65,0.048;64,0.666;79,0.221;3D,0.509;79,0.613;32,0.157;2D,0.372;79,0.63;31,0.101;3B,0.445;72,0.589;65,0.184;74,0.243;75,0.083;72,0.11;6E,0.177;73,0.495;71,0.626;72,0.278;74,0.102;28,0.562;64,0.79;78,0.348;2A,0.394;64,0.269;78,0.457;2B,0.583;64,0.345;79,0.322;2A,0.501;64,0.368;79,0.329;29,0.482;3B,0.928;7D,0.439');
INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000012, 99999999, 211769, '2022-11-22T06:59:13.858Z', '2022-11-22T06:59:41.238Z', 0, '76,0.99;6F,0.053;69,0.094;64,0.146;70,0.662;61,0.09;72,0.292;69,0.125;74,0.18;79,0.08;28,0.382;69,0.384;6E,0.061;74,0.148;61,0.451;5B,0.3;38,0.329;5D,0.527;29,0.471;7B,0.491;69,0.576;6E,0.068;74,0.073;69,0.228;2C,0.306;62,0.525;3D,0.377;30,0.281;3B,0.466;66,0.451;6F,0.112;72,0.137;28,0.345;69,0.289;3D,0.563;30,0.291;3B,0.49;69,0.665;3C,0.302;37,0.543;3B,0.287;69,0.529;2B,0.507;2B,0.136;29,0.307;7B,0.478;62,0.75;3D,0.589;28,0.312;62,0.897;2B,0.369;61,0.266;5B,0.215;69,0.483;5D,0.693;29,0.364;25,1.391;32,0.227;3B,0.797;7D,0.507;61,0.725;5B,0.261;37,0.388;5D,0.362;3D,0.474;62,0.859;3B,0.638;7D,0.228');
--INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000013, 99999999, 311512, '2022-11-22T06:52:34.527Z', '2022-11-22T06:52:57.734Z', 1, '69,0.346;6E,0.1;74,0.137;69x,0.324;42S,0.755;73,0.188;69,0.286;67,0.19;6E,0.102;28,0.361;69,0.322;6E,0.09;74,0.241;6E,0.224;29,0.379;7B,0.515;69,0.554;66,0.329;28,0.35;6E,0.281;3D,0.308;3D,0.169;30,0.232;29,0.289;72,0.464;65,0.186;74,0.22;75,0.075;72,0.114;6E,0.161;30,0.518;3B,0.465;72,0.646;65,0.189;74,0.225;75,0.064;72,0.133;6E,0.168;6E,0.645;2F,0.598;61,0.267;62,0.295;73,0.234;28,0.444;6E,0.755;29,0.321;3B,0.448;7D,0.434;70,0.765;72,0.166;69,0.138;6E,0.081;74,0.047;66,0.246;28,0.433;22,0.108;25,0.645;64,0.222;5C,0.315;6E,0.594;22,0.229;2C,0.392;73,0.41;69,0.176;67,0.175;6E,0.163;28,0.429;2D,0.379;31,0.191;2B,0.436;32,0.208;29,0.282;29,0.381;3B,0.456');
--INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000014, 99999999, 311630, '2022-11-22T06:58:13.738Z', '2022-11-22T06:58:45.681Z', 1, '64,0.316;6F,0.076;75,0.118;62,0.267;6C,0.049;65,0.14;64,0.445;69,0.101;73,0.285;74,0.211;61,0.126;6E,0.14;63,0.132;65,0.266;28,0.384;64,0.329;6F,0.096;75,0.085;62,0.271;6C,0.034;65,0.081;78,0.27;31,0.327;2C,0.271;64,0.279;6F,0.103;75,0.093;62,0.266;6C,0.023;65,0.112;79,0.899;31,0.14;2C,0.413;64,0.3;6F,0.077;75,0.072;62,0.294;6C,0.027;65,0.176;78,0.486;65x,0.35;42S,0.697;32,0.073;2C,0.406;64,0.465;6F,0.093;75,0.091;62,0.266;6C,0.031;65,0.275;79,0.703;32,0.089;29,0.359;7B,0.516;64,0.66;6F,0.093;75,0.089;62,0.253;6C,0.014;65,0.097;64,0.455;78,0.778;3D,0.516;66,0.718;61,0.08;62,0.189;73,0.124;28,0.399;78,0.508;32,0.324;2D,1.038;78,0.755;31,0.382;29,0.398;3B,0.568;64,0.298;6F,0.084;75,0.082;62,0.248;6C,0.027;65,0.064;64,0.546;79,0.242;3D,0.477;66,0.678;61,0.094;62,0.138;73,0.161;28,0.404;79,0.542;32,0.215;2D,0.374;79,1.136;31,0.079;29,0.398;3B,0.515;72,0.414;65,0.192;74,0.21;75,0.087;72,0.108;6E,0.188;64,0.533;78,0.267;2B,0.412;64,0.24;79,0.249;3B,0.536;7D,0.274');
--INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000015, 99999999, 311761, '2022-11-22T06:59:55.701Z', '2022-11-22T07:00:23.327Z', 1, '76,0.563;6F,0.17;69,0.086;64,0.166;70,0.539;61,0.096;72,0.304;69,0.144;74,0.139;79,0.172;28,0.363;69,0.368;6E,0.064;74,0.25;61,0.649;5B,0.298;38,0.349;5D,0.336;29,0.367;7B,0.51;69,0.612;6E,0.081;74,0.093;69,0.354;2C,0.364;62,0.478;3D,0.438;30,0.449;3B,0.48;66,0.37;6F,0.111;72,0.105;28,0.341;69,0.397;3D,0.518;30,0.277;3B,0.468;69,0.526;3C,0.33;37,0.371;3B,0.542;69,0.488;2B,0.486;2B,0.138;29,0.319;7B,0.57;62,0.973;3D,0.495;28,0.449;62,0.473;2B,0.663;61,0.544;5B,0.174;75x,0.528;42S,0.582;69,0.345;5D,0.669;29,0.39;25,0.538;32,0.518;3B,0.339;7D,0.378;61,0.598;5B,0.348;37,0.401;5D,0.435;3D,0.757;21,0.149;62,0.484;3B,0.462;7D,0.297');

INSERT INTO model(response_id) VALUES(1000000010);
INSERT INTO model(response_id) VALUES(1000000011);
INSERT INTO model(response_id) VALUES(1000000012);
--INSERT INTO model(response_id) VALUES(1000000013);
--INSERT INTO model(response_id) VALUES(1000000014);
--INSERT INTO model(response_id) VALUES(1000000015);

--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (499999,'(1) For statement','for (i = -2; i <= 2; i++) {',19,'NONE','forstatement','A for statement. The variable i ranges from -2 to 2.','https://paiza.io/projects/e/SW85LQcKgOs3P4Cs4R5etQ');
