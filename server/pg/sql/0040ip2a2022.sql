INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210139,'(2-a) Hello','printf("Hello, World!\\n");\nreturn 0;',33,'NONE','hello','This program displays "Hello, World!".<br><br>Line 3 prints a fixed string using the printf function. "printf("string");" means the instruction to print "string".<br><br>However, "\n" is not displayed. This denotes a line break. Although there is no difference in the result whether "\n" is present or not in this program, it is a good manner to end each line with a line break.<br><br>Line 4 says "return 0;". It specifies the end of the main function.<br>','https://paiza.io/projects/e/SW85LQcKgOs3P4Cs4R5etQ');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210242,'(2-b) Four arithmetic operations','printf("7 * 3 = %d\\n", 7 * 3);\nprintf("7 / 3 = %d\\n", 7 / 3);',46,'NONE','arith','This program calculates and outputs the sum, difference, product, and quotient of 7 and 3.<br><br>In the program, the message of the summation is written as "7 + 3 = %d<span lang="en" style="font-family: Courier New;">\</span>n", but it is not output as it is. Actually, %d is replaced by 10, which is the calculation result of 7 + 3. In addition, <span lang="en" style="font-family: Courier New;">\</span>n indicates a new line. Therefore, the output is "7 + 3 = 10".<br><br>The symbol "+" is used for addition, "-" for subtraction, "*" (asterisk) for multiplication, and "/" (slash) for division. Many programming languages, not limited to C, employ these characters.<br><br>The output of the final line is "7 / 3 = 2", but not "7 / 3 = 2.333333". This is because when an integer is divided by another integer, the quotient is necessarily an integer too.','https://paiza.io/projects/e/dQ7790yzyt67bR0OOpBRJQ');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210358,'(2-c) Pangram','#include <stdio.h>\nint main(void){\n    printf("waltz, bad nymph, for quick jigs vex.\\n");\n    return 0;\n}',84,'NONE','pangram','Like (2-a), this program outputs a single string.<br><br>The English sentence "waltz, bad nymph, for quick jigs vex." may not look familiar, but it is a short sentence made up of all the letters of the alphabet, called a pangram.<br><br>By the way, this task asked you to type in all the program code. Were you able to type the first character "#", the symbols of "{" and "}", and "&lt;stdio.h&gt;" without making mistakes?<br><br>If you thought it took you too long, please try again to reduce the number of typos and typing time.','https://paiza.io/projects/e/qXvC-1jw3w74sUQYJtGPYQ');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210422,'(3-a) Increment','int a = 7;\nprintf("a = %d\\n", a);\na = a + 1;',32,'EASY','increment','This program is intended to verify that an assignment changes the value of a variable.<br><br>In line 3, the variable a is declared as int (the integer type) and initialized with 7.<br><br>Line 4 uses the printf function to output the value of the variable a.<br>Here, the output is "a = 7".<br><br>Line 5 increases the value of the variable a by 1.<br>The "=" represents an assignment. That is, this statement assigns the result of the calculation on the right-hand side to the variable on the left-hand side.<br>Accordingly, this process makes the value of the variable a 8.<br>In the C Programming Language, there is an operator "++" for the increment (often used in for statements),<br>and the same process can be performed by replacing the code in line 5 with "a++;" or "++a;".<br><br>Line 6 once again outputs the value of the variable a.<br>Here, the output is "a = 8".','https://paiza.io/projects/e/jLDVnWfLz7KOLA8EH3JRbA');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210539,'(3-b) Day-of-week calculation','int year = 1999, month = 12, day = 31;\nint y = year + year / 4 - year / 100 + year / 400;\nint m = (13 * month + 8) / 5;\nint dow = (y + m + day) % 7;',103,'EASY','zeller','This program uses Zeller''s congruence to output a number representing the day of the week, based on the year, month, and day of the week.<br><br>Line 3 declares the variables named year, month, and day of type int and sets the date.<br>Multiple variables are declared in a single statement, which is called a collective declaration.<br><br>Lines 4 through 6 are day-of-week calculations using Zeller''s congruence.<br>We could alternatively substitute the variable dow with the formula in two separate lines,<br>but here we have the prepared variables y and m to contain the results of the calculation in progress, and used them in the calculation of dow.<br>If you have time, compare this with the class program to make sure you are doing the same thing.<br><br>Line 7 calls the printf function to output the value of dow.<br>The output is a single number, with 0 representing Sunday, 1 representing Monday, ..., and 6 represents Saturday.<br>In this program, the output is "5"; December 31, 1999 is a Friday.','https://paiza.io/projects/e/-lAja0FhVu6o68EPlCl2EA');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210653,'(3-c) On the left and right...','int left = 2;\nint right = 0;\nint judge = (right - left + 3) % 3;\nif (judge == 0) {\n  printf("Draw.\\n");\n}\nif (judge == 1) {\n  printf("Right won!\\n");\n}\nif (judge == 2) {\n  printf("Left won!\\n");\n}',150,'EASY','rps','In this program, you play "rock-paper-scissors" with your left and right hands.<br><br>The program declares the variable left on line 3 and the variable right on line 4, and assigns the moves as integer values. Specifically, 0 is for "rock", 1 is for "paper", and 2 is for "scissors". In this program, the left hand means "scissors" and the right hand means "rock".<br><br>The variable judge is set to an integer value based on the values of left and right. The remainder operator % is used to ensure that the result is always 0, 1, or 2. Note that "+ 3" is appended to avoid the inconvenience of a negative number being divided.<br><br>Among lines 6 through 8, 9 through 11, and 12 through 14, exactly one conditional expression is determined to be true depending on the value of judge. Note also that the operator used on lines 6, 9, and 12 is "==" and not "=". If the value of judge is 0 (left and right are equal), the program outputs "Draw." If it is 1, the output is "Right won!" and if it is 2, that is "Left won!"<br><br>The output of this program is "Right won!" When the left hand is scissors and the right hand is "rock", sure enough the right hand wins.','https://paiza.io/projects/e/LJ4Hc9plYgwm9DHGjf3jhA');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210751,'(4-a) How to go?','if ((hour2 * 60 + min2) - (hour1 * 60 + min1) <= 10) {\n    printf("Take a bike.\\n");\n} else {\n    printf("Let''s walk.\\n");\n}',93,'EASY','howtogo','Using the "if" statement for conditional branching, "If I need to get there in 10 minutes, I''ll ride my bike. If not, we''ll walk." is described in the program.<br><br>The variables hour1 and min1 represent the hour and minute of the current time, while hour2 and min2 represent the hour and minute of the arrival time. The if statement used in line 5 branches if or not the difference between the arrival time and the current time is equal to or less than 10 minutes. In this program, the difference is 8 minutes, so line 6 is processed and the output is "Take a bike."<br><br>Change the value of the variable min2 to 6 and run it, and you will find the output "Let''s walk.", since the difference is over 10 minutes.<br><br>Line 5 contains three sets of parentheses. The outermost pair is required for the syntax of the if statement. The inner two sets represent the cohesion in the expression.','https://paiza.io/projects/e/c1oX4xQQDudK7RgfXWJobQ');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210898,'(4-b) Decremental','while (num > 0) {\n    num = num - rand() % 5 - 1;\n    printf("num = %d\\n", num);\n}',56,'EASY','drawdown','The program repeatedly subtracts a random number between 1 and 5 from the variable num until the value of num is 0 or negative. The "while" statement is used for repetition.<br><br>In line 4, the variable num is declared as the integer type and initialized with 20.<br><br>Line 6 is the while statement. "While (num &gt; 0)" means that it repeats the process while num is greater than 0, but it can also be interpreted as it finishes the repeat process when num is equal to or less than 0. The processing for one iteration is from "{" at the end of line 6 to "}" in line 9; actually lines 7 and 8 are in charge.<br><br>Line 7 subtracts a random number between 1 and 5 from the variable num. Here, the "rand" function, which is a standard library function, is used to generate a random number. Since "%" is the remainder operator, "rand() % 5" results in between 0 and 4. To reduce the value of num by a random value between 1 and 5, "- 1" is appended. Note that to use the "rand" function, you must include the header file "stdlib.h", which is specified in line 2 of this program.<br><br>This program outputs the value of num in line 5 after the initialization and in line 8 in the iterative process of the while statement. The initial line of the output is "num = 20", and the value is decreased. You might be wondering if the value returned by the rand function is fixed in this program. The last line shows "num = 0".<br><br>To see the output all the way through in paiza.io, move the mouse cursor just below the "Run" button. As you do so, the shape of the mouse cursor change, and when you drag, the output and input areas expand and contract up and down. Try it.','https://paiza.io/projects/e/JNfVQyPcGjHdLiOewxKwlw');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (210957,'(4-c) Coordinates','for (i = 1; i <= 15; i++) {\n    printf("%d: (%d, %d)\\n", i, x, y);\n    if (x == n) {\n        n++;\n        x = 1;\n        y = n;\n    } else {\n        x++;\n        y--;\n    }\n}',85,'EASY','grid','The program outputs coordinates starting from the point (1, 1) in 2D coordinates such that both the x and y coordinates are positive integers.<br><br>Let''s take a closer look at the for statement in line 6. First, "i = 1" sets the value of variable i to 1. Next, with "i &lt;= 15", the program iterates until the value of i is less than or equal to 15. Therefore this program changes the value of the integer variable i from 1 to 15, and processes lines 7-15 for each. When the value of i increases by 1 and reaches 16, "i &lt;= 15" is judged false and the iteration is terminated.<br><br>Line 7 calls the printf function to print the values of variables i, x, and y.<br><br>Lines 8-15 describe conditional branches using if-else. If the value of x is equal to the value of n, increase n by 1 and assign 1 to x and n to y. Otherwise, increase x by 1 and decrease y by 1. The double minus sign denoted by "--" is the opposite of "++", meaning decrease by 1. If we focus on the changes in the variables other than i, then keeping the equality x+y=n, n increases by 1 and x increases by 1 from 1 to n and y decreases by 1 from n to 1.<br><br>The program outputs 15 lines from "1: (1, 1)" to "15: (5, 1)".','https://paiza.io/projects/e/QIHKT_4YAuW8HO5gYR4jLw');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (211073,'(5-a) Eratosthenes'' sieve','for (i = 2; i < 100; i++) {\n    if (a[i] == 0) {\n        printf("%d ", i);\n        for (j = i * 2; j < 100; j = j + i) {\n            a[j] = 1;\n        }\n    }\n}',79,'EASY','sieve','This program outputs the prime numbers less than 100 in ascending order, on a single line with a space character between numbers. The first number output is 2 and the last is 97.<br><br>The array declared in line 3 is used to record whether numbers are prime or composite, so that i is prime if a[i] equals to 0 and composite if a[i] equals to 1, where i is between 2 and 99. The declaration says a[100], but you cannot refer to or assign a[100] in the expression. Moreover, the values a[0] and a[1] are not referred in this program.<br><br>The variables declared in line 4 is used in for statements. Such a variables is called a "loop variable" or a "loop counter". Since we would like to use a double loop, we declare two variables, namely i and j.<br><br>Lines 6-8 set the value of each element of the array to 0. Once done, everything is considered to be prime.<br><br>Lines 10-17 are the algorithm called "Sieve of Eratosthenes". The variable i varies from 2 to 99. In line 11, if the value of a[i] is 0, it means that i is a prime number, and the program outputs its value. Then, the variable j is filled with the values 2 times i, 3 times i, ..., in that order, and assign 1 to a[j], which means that j is a composite number.<br><br>Each element of array a possesses the number 1 (composite) or 0 (prime). A variable that has 0 or 1 as its value is called a "flag". Assigning 1, as in line 14, is called "raising a flag".','https://paiza.io/projects/e/Km930OAb0oRy0rHtzlbo-w');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (211197,'(5-b) Triple loop','int i, j, k;\nfor (i = 0; i < 3; i++) {\n    for (j = 0; j < 3; j++) {\n        c[i][j] = 0;\n        for (k = 0; k < 3; k++) {\n            c[i][j] = c[i][j] + a[i][k] * b[k][j];\n        }\n    }\n}',105,'EASY','matrix','This is a program that calculates the square of a 3-by-3 matrix, based on the definition of the matrix product, and outputs the value of the lower right component.<br><br>In lines 3-5, we declare three two-dimensional arrays and also initialize a and b. The values are the same but initialized separately. The array c is not initialized and each component is set to 0 using a for statement.<br><br>When mapping the three arrays a, b, and c to the 3-by-3 matrices A, B, and C, respectively, the calculation C=AB is performed.<br><br>Since we use a triple loop, there are used three variables for the loop: i, j, and k.<br><br>Lines 7-14 are the computation of the matrix product. The for statements on i, j, and k start at 0 and increase by 1, repeating the process for less than 3. Therefore, each variable takes a value between 0 and 2. In mathematics, when referring to the components of a matrix, the upper left is often denoted by the (1,1) component or a11, but in this program the upper left is a[0][0], because the first subscript of the array (the value in [ ]) is 0 in the C language.<br><br>The component-by-component multiplication is the part of line 11 where a[i][k] * b[k][j]. The sum of multiplication by components, which is often written using "Σ" or "..." in math books, is done by combining the for statement on variable k in lines 10-12 and "c[i][j] = c[i][j] + a[i][k] * b[k][j]" in line 11.<br><br>The output is c[2][2], i.e., the value of the bottom right-most component of matrix C. In this program, it is "7".','https://paiza.io/projects/e/h80UMbdaaQekRGmq76wHaQ');

INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (211238,'(6-a) 65','int i = 65;\nchar c = ''A'';\ndouble d = 65;\nprintf("i = %d\\n", i);\nprintf("c = %d\\n", c);\nprintf("d = %f\\n", d);',86,'EASY','65','This program is designed to check the differences in variable contents and output methods according to data types.<br><br>Lines 3 through 5 declare and initialize three variables with different data types. Line 3 declares the variable i with type int and initializes it with the integer value 65. Line 4 declares the variable c with type char and initializes it with the character ''A'', which is an integer value of 65 based on the ASCII code. In line 5, the variable d is declared as a double type and initialized with the integer value 65, but this variable holds the real value converted to a double type.<br><br>In lines 6-8, the printf function is used to print out the values of the three variables. In C, functions such as printf use format specifiers to specify the format in which the values of variables are displayed. Examples of format specifiers are shown below.<br>%d: Output as an integer value in decimal. %x:<br>Output as an integer value in hexadecimal.<br>%f: output as a real number.<br>%c: output as a character.<br><br>In line 6, since the format specifier "%d" is used and the value of the variable i is 65, the output is "i = 65".<br><br>In line 7, the format specifier "%d" is used again and the variable c holds the integer value 65, the output is "c = 65". If you want to output the value of variable c as a character, write "printf("c = %c\n", c);".<br><br>In line 8, the format specifier "%f" is used and the variable d holds 65 as the double type. The output is "d = 65.000000".<br><br>The format specifier must be specified appropriately for the data type. Replacing "%d" with "%f" in "printf("i = %d\n", i);" or "%f" with "%d" in "printf("d = %f\n", d);" will not result in the expected output, after the warning is displayed.','https://paiza.io/projects/e/NinwOR8E29o2X6_1bihp-A');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (211392,'(6-b) String scanning','char s[20] = " WAKAYAMADAIGAKUMAE";\nchar c = ''A'';\nfor (i = 1; i <= 18; i++) {\n    if (s[i] == c) {\n        printf("%d ", i - p);\n        p = i;\n    }\n}',95,'EASY','scan','This program outputs the occurrences of a particular character in the string WAKAYAMADAIGAKUMAE. The output is "2 2 2 2 2 2 3 4", which means that the letter A appears at the 2nd character from the beginning, two characters later (4th character), two characters later (6th), two characters later (8th), two characters later (10th), three characters later (13th) and four characters later (17th).<br><br>Line 4 declares and initializes an array s of char. In the string for initialization, W is preceded by a space character. This makes s[1] the character ''W''. Line 5 sets a specific character ''A'', to the char variable c.<br><br>In the for loop in lines 6 through 11, the variable i starts at 1 and is incremented by 1. s[i] in line 7 scans each character of the string at a time. In this iterative process, the last value of i is 18, but s[18] is the last character of the string, or ''E''.<br><br>The if statement in line 7 executes lines 8-9 when s[i] is equal to (or the same character as) c . The expression i - p in line 8 represents how many characters after the previous output position (for the first, how many characters from the beginning) and outputs the value; replacing line 8 with "printf("%d ", i)" would output the numbers of characters from the beginning. The substitution in line 9 updates the position of the last occurrence of a particular character.<br><br>There is no line break in the for loop. It is done in line 12.','https://paiza.io/projects/e/aOR61s7xbSX6tGcv6A15LA');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (211444,'(6-c) In comparison with one in a million','#include <stdio.h>\n#include <math.h>\nint main(void){\n    double x1, x2;\n    x1 = 2;\n    x2 = 3;\n    while (fabs(x2 - x1) > 1.0e-6) {\n        x1 = x2;\n        x2 = x1 - (x1 * x1 - 5) / (2 * x1);\n    }\n    printf("x = %f\\n", x2);\n    return 0;\n}',154,'FULL','newton','The program uses an algorithm called Newton''s method to compute an approximation of root 5 (&radic;5).<br><br>The first line of #include is the same as before, but the second line "#include <math.h>" is written to call the math function "fabs".<br><br>Lines 4-6 establish the initial values. Since the square root of 5 is greater than 2 and less than 3, we set x1 = 2 and x2 = 3. If we set the values to -2 and -3, respectively, we are looking for -&radic;5, and the output will be a negative number.<br><br>Lines 7-10 describe the algorithm for Newton''s method.<br><br>The fabs used in line 7 is the function that calculates the absolute value of a double type. Besides, 1.0e-6 is an exponential notation, meaning 1.0 x -6 to the power of 10, which is one-millionth. Therefore this line means that the process of lines 8-9 will be repeated while the absolute value of the difference between x2 and x1 is greater than one-millionth.<br><br>Lines 8 and 9 update the values of x1 and x2. Line 9 is an assignment derived from the equation x2 = x1 - f(x1) / f''(x1) used in Newton''s method with f(x) = x * x - 5. Solving f(x) = 0, x = &plusmn;&radic;5 (if there are multiple solutions for f(x) = 0, Newton''s method finds only one of them). Note that the derivative of f(x) is f''(x) = 2 * x.<br><br>In line 11, the value of variable x2 is output as the solution. In this program, it is "x = 2.236068".','https://paiza.io/projects/e/h8Ad3T_L3iykLobJgguBAA');

INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000000, 99999999, 210139, '2021-10-19T00:34:01.977Z', '2021-10-19T00:34:09.612Z', 0, '70,0.112;72,0.255;69,0.13;6E,0.065;74,0.055;66,0.492;28,0.403;22,0.058;48,0.313;65,0.202;6C,0.117;6C,0.174;6F,0.188;2C,0.244;57,0.366;6F,0.16;72,0.224;6C,0.544;64,0.059;21,0.308;5C,0.26;6E,0.353;22,0.144;29,0.219;3B,0.492;72,0.237;65,0.168;74,0.197;75,0.076;72,0.192;6E,0.106;30,0.367;3B,0.355');
INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000001, 99999999, 210957, '2021-10-28T05:42:28.665Z', '2021-10-28T05:42:59.704Z', 1, '66,0.812;6F,0.132;72,0.106;28,0.295;69,0.297;3D,0.638;31,0.156;3B,0.301;69,0.826;3C,0.301;3D,0.312;31,0.194;35,0.282;3B,0.438;69,0.488;2B,0.322;2B,0.141;29,0.304;7B,0.455;70,0.315;72,0.167;69,0.13;6E,0.064;74,0.062;66,0.197;28,0.313;22,0.118;25,0.696;64,0.362;3A,0.754;28,0.705;25,0.317;64,0.286;2C,0.522;25,0.458;64,0.199;29,0.955;5C,0.252;6E,0.491;22,0.234;2C,0.257;69,1.043;2C,0.098;78,0.297;2C,0.108;79,0.412;29,0.417;3B,0.559;69,0.447;66,0.077;28,0.3;78,0.223;3D,0.396;3D,0.132;6E,0.278;29,0.388;7B,0.405;6E,0.475;2B,0.477;2B,0.149;3B,0.333;78,1.027;3D,0.931;31,0.178;3B,0.25;74x,0.482;42S,0.388;79,0.094;3D,0.406;6E,0.522;3B,0.461;7D,0.526;65,0.302;6C,0.12;73,0.115;65,0.174;7B,0.44;78,0.415;2B,0.346;2B,0.153;3B,0.297;79,0.471;2D,0.355;2D,0.127;3B,0.279;7D,0.355;7D,0.146');
INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000002, 99999999, 210957, '2021-10-28T06:35:33.988Z', '2021-10-28T06:36:25.684Z', 0, '66,0.528;6F,0.126;72,0.132;28,1.562;69,0.262;3D,0.398;31,0.767;3B,0.169;69,1.166;3C,0.483;3D,0.295;31,1.192;35,0.08;3B,0.745;69,0.9;2B,0.341;2B,0.13;29,0.646;7B,0.859;70,1.602;72,0.486;69,0.086;6E,0.179;74,0.097;66,0.168;28,1.166;22,0.2;25,0.771;64,0.93;3A,0.521;28,1.898;25,0.663;64,0.34;2C,1.067;25,0.688;64,0.351;29,0.936;5C,0.945;6E,0.08;22,0.883;2C,0.315;69,0.85;2C,0.332;78,0.78;2C,0.148;79,0.378;29,1.05;3B,0.648;69,1.155;66,0.091;28,0.8;78,0.561;3D,0.708;3D,0.121;6E,0.824;29,0.786;7B,0.459;6E,1.165;2B,0.479;2B,0.125;3B,0.238;78,1.482;3D,0.485;31,0.245;3B,0.771;79,0.923;3D,0.695;6E,0.988;3B,0.42;7D,1.152;65,0.877;6C,0.105;73,0.123;65,0.185;7B,1.18;78,1.321;2B,0.585;2B,0.128;3B,0.287;79,0.936;2D,0.364;2D,0.123;3B,0.507;7D,0.848;7D,0.13');
INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000003, 99999999, 211444, '2021-11-11T05:42:09.322Z', '2021-11-11T05:43:00.437Z', 2, '23,0.307;69,0.52;6E,0.066;63,0.079;6C,0.154;75,0.083;64,0.073;65,0.177;3C,0.303;73,0.306;74,0.156;64,0.216;69,0.048;6F,0.092;2E,0.335;68,0.331;3E,0.446;23,0.59;69,0.248;6E,0.069;63,0.095;6C,0.093;75,0.099;64,0.097;65,0.179;3C,0.311;6D,0.297;61,0.066;74,0.247;68,0.064;2E,0.298;68,0.312;3E,0.352;69,0.448;6E,0.063;74,0.402;6D,0.174;61,0.099;69,0.198;6E,0.237;28,0.481;76,0.237;6F,0.08;69,0.048;64,0.116;29,0.261;7B,0.426;64,0.345;6F,0.04;75,0.092;62,0.229;6C,0.055;65,0.033;78,0.253;31,0.301;2C,0.325;78,0.345;32,0.252;3B,0.379;78,1.045;31,0.396;3D,0.322;32,0.227;3B,0.588;78,0.252;32,0.26;3D,0.356;33,0.215;3B,0.731;77,0.499;68,0.086;69,0.05;6C,0.231;65,0.114;28,0.473;66,0.461;61,0.377;62,0.175;73,0.199;28,0.705;78,0.213;32,0.271;2D,0.412;78,0.238;32x,0.27;42S,0.768;31,0.089;29,0.377;3E,0.714;31,0.261;2E,0.194;30,0.4;65,0.458;2D,0.528;36,0.326;29,1.082;7B,0.506;78,0.435;31,0.274;3D,0.362;78,0.184;32,0.317;3B,0.261;78,0.281;32,0.268;3D,0.542;78,0.181;31,0.311;2D,0.578;28,0.525;78,0.174;31,0.355;2A,0.419;78,0.212;31,0.336;2D,0.947;35,0.441;29,0.518;2F,0.499;28,0.719;78x,0.189;42S,0.892;32,0.172;2A,0.33;78,0.191;31,0.241;29,0.308;3B,0.472;7D,0.548;70,0.407;72,0.385;69,0.059;6E,0.064;74,0.096;66,0.189;28,0.368;22,0.192;78,0.359;3D,0.663;25,0.425;66,0.869;5C,0.149;6E,0.286;22,0.271;2C,1.098;78,0.354;32,0.292;29,0.297;3B,1.127;72,0.201;65,0.178;74,0.208;75,0.052;72,0.131;6E,0.147;30,0.44;3B,1.05;7D,0.375');

INSERT INTO model(response_id) VALUES(1000000000);
INSERT INTO model(response_id) VALUES(1000000001);
INSERT INTO model(response_id) VALUES(1000000002);
INSERT INTO model(response_id) VALUES(1000000003);

INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000004, 99999999, 211238, '2022-11-15T02:59:00.148Z', '2022-11-15T02:59:29.749Z', 1, '69,0.4;6E,0.074;74,0.485;69,0.341;3D,0.517;36,0.654;35,0.398;3B,0.464;63,0.602;68,0.192;61,0.153;72,0.389;63,0.248;3D,0.354;27,0.617;41,0.163;27,0.136;3B,0.631;64,0.458;6F,0.076;75,0.079;62,0.228;6C,0.053;65,0.056;64,0.26;3D,0.559;36,0.524;35,0.057;3B,0.562;70,0.377;72,0.24;69,0.073;6E,0.077;74,0.093;66,0.196;28,0.353;22,0.187;69,0.643;3D,0.317;25,0.638;64,0.317;5C,0.369;6E,0.509;22,0.214;29x,0.188;42S,0.501;2C,0.626;69,0.408;29,0.313;3B,0.484;70,0.459;72,0.188;69,0.071;6E,0.075;74,0.075;66,0.188;28,0.334;22,0.134;63,0.415;3D,0.405;25,0.5;64,0.886;5C,0.114;6E,0.3;22,0.273;2C,0.58;63,0.337;29,0.343;3B,0.392;70,0.353;72,0.23;69,0.079;6E,0.072;74,0.08;66,0.193;28,0.361;22,0.152;64,0.453;3D,0.483;25,0.473;66,0.452;5C,0.257;6E,0.448;22,0.234;2C,0.994;64,0.622;29,0.326;3B,0.416');
INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000006, 99999999, 211392, '2022-11-15T03:29:26.049Z', '2022-11-15T03:29:58.366Z', 2, '63,0.738;68,0.12;61,0.174;72,0.329;73,0.746;5B,0.201;32,0.213;30,0.276;5D,0.381;22x,0.37;42S,0.693;3D,0.622;22,0.097;57,0.416;41,0.234;4B,0.302;41,0.107;59,0.538;41,0.108;4D,0.144;41,0.089;44,0.225;41,0.2;49,0.095;47,0.163;41,0.112;4B,0.118;55,0.044;4D,0.271;41,0.062;45,0.255;22,0.245;3B,0.393;63,0.593;68,0.199;61,0.151;72,0.297;63,0.238;3D,0.46;27,0.393;41,0.168;27,0.178;3B,0.552;66,0.333;6F,0.125;72,0.128;28,0.321;69,0.329;75x,0.003;42S,0.533;3D,0.679;31,0.172;3B,0.442;69,0.819;3C,0.236;3D,0.28;31,0.214;38,0.24;3B,0.55;69,0.528;2B,0.338;2B,0.136;29,0.31;7B,0.469;69,0.566;66,0.068;28,0.514;73,0.257;5B,0.257;69,0.347;5D,0.322;3D,0.324;3D,0.144;63,0.202;29,0.381;7B,0.436;70,0.337;72,0.181;69,0.125;6E,0.068;74,0.084;66,0.239;28,0.381;22,0.126;25,0.66;64,0.245;53PC,0.263;22,0.345;2C,0.425;69,0.598;2D,0.306;70,0.295;29,1.019;3B,0.329;70,0.914;3D,0.238;69,0.396;3B,1.055;7D,0.253;7D,0.131');
INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000008, 99999999, 211444, '2022-11-15T03:33:01.822Z', '2022-11-15T03:33:50.147Z', 1, '23,0.316;69,0.522;6E,0.088;63,0.093;6C,0.16;75,0.081;64,0.064;65,0.193;3C,0.405;73,0.22;74,0.262;64,0.213;69,0.06;6F,0.093;2E,0.529;68,0.438;3E,0.501;23,0.879;69,0.328;6E,0.073;63,0.087;6C,0.13;75,0.075;64,0.096;65,0.194;3C,0.36;6D,0.311;61,0.033;74,0.294;68,0.065;2E,0.389;68,0.356;3E,0.576;69,0.598;6E,0.08;74,0.151;6D,0.185;61,0.112;69,0.13;6E,0.176;28,0.449;76,0.261;6F,0.096;69,0.081;64,0.116;29,0.32;7B,0.486;64,0.606;6F,0.12;75,0.081;62,0.245;6C,0.043;65,0.064;78,0.325;31,0.269;2C,0.253;78,0.204;32,0.272;3B,0.274;78,0.307;31,0.338;3D,0.492;32,0.224;3B,0.309;78,0.209;32,0.287;3D,0.361;33,0.262;3B,0.344;77,0.621;68,0.078;69,0.047;6C,0.18;65,0.101;28,0.434;66,0.552;61,0.149;62,0.136;73,0.257;28,0.718;78,0.225;32,0.277;2D,0.292;78,0.281;31,0.378;29,0.553;3E,0.618;31,0.34;2E,0.27;30,0.324;65,0.321;2D,0.61;36,0.436;29,0.449;7B,0.502;78,0.342;31,0.287;3D,0.373;78,0.23;32,0.282;3B,0.279;78,0.273;32,0.295;3D,0.622;78,0.194;31,0.317;2D,0.955;28,0.345;78,0.225;31,0.298;2A,0.359;78,0.183;31,0.326;2D,0.529;35,0.803;29,0.348;2F,0.57;28,0.669;32,0.213;2A,0.417;78,0.277;31,0.265;29,0.352;3B,0.613;7D,0.507;70,0.381;72,0.208;69,0.128;6E,0.086;74,0.055;66,0.228;28,0.586;22,0.081;78,0.306;3D,0.523;25,0.81;66,0.289;5C,0.461;6E,0.385;22,0.229;2C,0.404;78,0.206;31x,0.397;42S,0.369;32,0.12;29,0.402;3B,1.014;72,0.172;65,0.182;74,0.212;75,0.073;72,0.128;6E,0.14;30,0.5;3B,0.538;7D,0.208');

INSERT INTO model(response_id) VALUES(1000000004);
INSERT INTO model(response_id) VALUES(1000000006);
INSERT INTO model(response_id) VALUES(1000000008);

INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (211591,'(7-a) Positive or negative','int sign(int n){\n    return (n > 0) - (n < 0);\n}\nprintf("%d\\n", sign(-1 + 2));',59,'EASY','sign','This program defines a sign function and prints the result of calling this function for three inputs. A function that returns 1 if the given real number is positive, -1 if it is negative, and 0 if it is zero, is called a sign function.<br><br>The user-defined function "sign" takes an integer value. The return value is also an integer value. It stores the argument in the variable n, performs the calculation in a special (but accepted as the C language rule) way in line 3, and returns the result.<br><br>The rule is that when the result of a small or large comparison is true, the result of the expression is 1; when it is false, the result is 0. When the argument n is positive, n &gt; 0 is 1 because it is true, n &lt; 0 is 0 because it is false, and "(n &gt; 0) - (n &lt; 0)" is 1 - 0, which is 1 (and this is the return value). When n is negative, n &gt; 0 is 0 because it is false, n &lt; 0 is 1 because it is true, and "(n &gt; 0) - (n &lt; 0)" is 0 - 1, which lets the function return -1. When n is 0, n &gt; 0 is 0 because it is false, n &lt; 0 is also false, and "(n &gt; 0) - (n &lt; 0)" is 0 - 0, i.e. 0.<br><br>In this program, the sign function is called in each of lines 6 through 8. In line 6, sign(-333) causes -333 to be passed to the parameter n in line 3. Line 7 invokes sign(-1 + 2), where the argument is 1, the calculation result. Line 8 describes sign(0.0), but since the function''s parameter is of type int, the integer value 0 is passed.<br><br>This program outputs "-1" for the first line, "1" for the second line, and "0" for the third line.','https://paiza.io/projects/e/j_SHX0aDwy-1Ce4F6QQOww');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (211654,'(7-b) Distance calculation','double distance(double x1, double y1,\n                double x2, double y2){\n    double dx = x2 - x1;\n    double dy = y2 - y1;\n    return sqrt(dx * dx + dy * dy);\n}',107,'EASY','distance','This program uses the three square theorem to find the distance between two points on a two-dimensional plane.<br><br>The distance is determined by the user-defined function distance, which begins on line 3. It takes four arguments as follows:<br>x1: x-coordinate of the first point<br>y1: y-coordinate of the first point<br>x2: x-coordinate of the second point<br>y2: y-coordinate of the second point<br>All numbers that this function handles, including the return value, are of type double.<br><br>Line 7 uses the sqrt function to calculate the square root. To use the sqrt function, the header file math.h must be loaded, which is specified in line 2 of this program.<br><br>In lines 10-11, the variables representing the coordinates of the two points are declared as the double type and initialized. These variables and the variables seen in lines 3-4 are the same name, but they are different entities because they have different scopes. For example, changing the value of the variable x1 in the distance function does not affect x1 in the main function.<br><br>Lines 12-14 calls the printf function to display the distance between two points. The result displayed is "(-0.400000,1.220000)-(2.600000,-2.780000): 5.000000". The distance is 5. The difference between the x-coordinates of the two points is 3, and the difference between the y-coordinates is 4.<br><br>The symbols "(" in line 3 and ")" in line 4, and the first "(" in line 12 and the last ")" in line 14 are the corresponding parentheses, respectively. In most cases, the pair "(" and ")" or "[" and "]" should be on the same line, but they can be on different lines as this program shows.','https://paiza.io/projects/e/EYQ0SWQ4-AL2gGDM_kW7Yw');
INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (211769,'(7-c) Parity bit','void parity(int a[8]){\n    int i, b = 0;\n    for (i = 0; i < 7; i++) {\n        b = (b + a[i]) % 2;\n    }\n    a[7] = b;\n}',68,'EASY','paritybit','The program is to set the parity bit at the end of a sequence of 0s and 1s. A parity bit is the simplest mechanism for error detection in communication.<br><br>This program defines three functions. The printarray function in lines 2-8 prints out each element of array a, separated by spaces. The parity function in lines 9-15 sets the parity bit. The main function is defined in lines 16-22. The return type of the printarray and parity functions is void and they return nothing. Neither of those functions has a return statement inside.<br><br>Let''s take a closer look at the parity function. It takes an array as its argument, and in line 10 declares the variable i for the for loop and the variable b for the parity bit calculation, initialized to 0.<br><br>The for loop in lines 11-13 updates the value of b. The new value of b is the remainder dividing by 2, after adding each array element. Since a[0] through a[6] contain either 0 or 1, at the end of the for loop, if a[0] through a[6] contain an odd number of 1s, the value of b is finally 1; if an even number, the value of b is 0.<br><br>In line 14, the value of b is assigned to a[7]. The variable b cannot be referred outside of this function, but the array a can be referred by the caller by changing the value of its elements within the function execution. The reason why this is possible is that when an array is specified as an argument or a parameter to a function, it actually becomes a pointer.<br><br>Observing all the elements including the parity bits, namely a[0] through a[7], you can find the even number of 1''s. As for "error detection in communication" mentioned above, if these 8 bits are sent and the receiver gets an even number of 1''s, then the receiver determines that there was an error in communication.<br><br>In the main function, the array is first declared and initialized in line 17, where each element is stored with a value. The array a is used as an argument to call the printarray function in line 18, the parity function in line 19, and the printarray function again in line 20. Line 14 assigns a[7] = 1. The output is "0 0 1 0 0 1 1 999" for the first line and "0 0 1 0 0 1 1 1" for the second line.','https://paiza.io/projects/e/RByRDD0BJJfjEjg-fbpeeg');

INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000010, 99999999, 211591, '2022-11-22T06:52:03.287Z', '2022-11-22T06:52:23.224Z', 1, '69,0.352;6E,0.077;74,0.072;73,0.428;69,0.146;67,0.212;6E,0.125;28,0.366;69,0.332;6E,0.053;74,0.148;6E,0.237;29,0.458;7B,0.496;72,0.566;65,0.18;74,0.226;75,0.079;72,0.117;6E,0.193;28,0.64;6E,0.369;3E,0.502;39x,0.396;42S,0.643;30,0.376;29,0.294;2D,0.432;28,0.398;6E,0.42;3C,0.514;30,0.396;29,0.406;3B,0.546;7D,0.422;70,0.397;72,0.175;69,0.109;6E,0.079;74,0.075;66,0.227;28,0.556;22,0.081;25,0.761;64,0.366;5C,0.373;6E,0.42;22,0.184;2C,0.481;73,0.434;69,0.172;67,0.215;6E,0.145;28,0.443;2D,0.761;31,0.157;2B,0.569;32,0.181;29,0.318;29,0.167;3B,0.473');
INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000011, 99999999, 211654, '2022-11-22T06:57:25.747Z', '2022-11-22T06:57:58.959Z', 2, '64,0.293;6F,0.097;75,0.082;62,0.27;6C,0.046;65,0.141;64,0.547;69,0.164;73,0.46;74,0.23;61,0.123;6E,0.162;63,0.115;65,0.254;28,0.46;64,0.262;6F,0.084;75,0.079;62,0.27;6C,0.06;65,0.08;78,0.353;31,0.276;2C,0.298;64,0.396;6F,0.12;70x,0.01;75x,0.051;42S,0.874;42S,0.181;75,0.649;62,0.25;6C,0.026;65,0.099;79,0.722;31,0.101;2C,0.357;64,0.487;6F,0.084;75,0.072;62,0.272;6C,0.011;65,0.145;78,0.269;32,0.325;2C,0.281;64,0.388;6F,0.113;75,0.07;62,0.247;6C,0.049;65,0.056;79,0.639;32,0.207;29,0.358;7B,0.538;64,0.552;6F,0.084;75,0.065;62,0.247;6C,0.03;65,0.084;64,0.377;78,0.27;3D,0.638;78,0.368;32,0.324;2D,1.049;78,0.24;31,0.271;3B,0.274;64,0.456;6F,0.086;75,0.086;62,0.221;6C,0.069;65,0.048;64,0.666;79,0.221;3D,0.509;79,0.613;32,0.157;2D,0.372;79,0.63;31,0.101;3B,0.445;72,0.589;65,0.184;74,0.243;75,0.083;72,0.11;6E,0.177;73,0.495;71,0.626;72,0.278;74,0.102;28,0.562;64,0.79;78,0.348;2A,0.394;64,0.269;78,0.457;2B,0.583;64,0.345;79,0.322;2A,0.501;64,0.368;79,0.329;29,0.482;3B,0.928;7D,0.439');
INSERT INTO response(response_id, student_id, question_id, start_at, finish_at, miss_count, note) VALUES(1000000012, 99999999, 211769, '2022-11-22T06:59:13.858Z', '2022-11-22T06:59:41.238Z', 0, '76,0.99;6F,0.053;69,0.094;64,0.146;70,0.662;61,0.09;72,0.292;69,0.125;74,0.18;79,0.08;28,0.382;69,0.384;6E,0.061;74,0.148;61,0.451;5B,0.3;38,0.329;5D,0.527;29,0.471;7B,0.491;69,0.576;6E,0.068;74,0.073;69,0.228;2C,0.306;62,0.525;3D,0.377;30,0.281;3B,0.466;66,0.451;6F,0.112;72,0.137;28,0.345;69,0.289;3D,0.563;30,0.291;3B,0.49;69,0.665;3C,0.302;37,0.543;3B,0.287;69,0.529;2B,0.507;2B,0.136;29,0.307;7B,0.478;62,0.75;3D,0.589;28,0.312;62,0.897;2B,0.369;61,0.266;5B,0.215;69,0.483;5D,0.693;29,0.364;25,1.391;32,0.227;3B,0.797;7D,0.507;61,0.725;5B,0.261;37,0.388;5D,0.362;3D,0.474;62,0.859;3B,0.638;7D,0.228');

INSERT INTO model(response_id) VALUES(1000000010);
INSERT INTO model(response_id) VALUES(1000000011);
INSERT INTO model(response_id) VALUES(1000000012);

--INSERT INTO question(question_id,name,type_content,count,difficulty,basename,commentary,url) VALUES (499999,'(1) For statement','for (i = -2; i <= 2; i++) {',19,'NONE','forstatement','A for statement. The variable i ranges from -2 to 2.','https://paiza.io/projects/e/VvOKmvfumTR4Tj2jKJYn0g');
